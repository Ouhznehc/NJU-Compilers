Rules useless in parser due to conflicts

   19 StructSpecifier: error

   40 StmtList: error

   47 Stmt: error

   55 DecList: error

   58 Dec: error

   80 Args: error


State 1 conflicts: 6 reduce/reduce
State 14 conflicts: 5 reduce/reduce
State 16 conflicts: 2 reduce/reduce
State 29 conflicts: 1 shift/reduce
State 31 conflicts: 16 reduce/reduce
State 34 conflicts: 1 shift/reduce
State 35 conflicts: 3 reduce/reduce
State 40 conflicts: 1 reduce/reduce
State 45 conflicts: 3 reduce/reduce
State 56 conflicts: 14 reduce/reduce
State 101 conflicts: 1 reduce/reduce
State 120 conflicts: 14 reduce/reduce


Grammar

    0 $accept: Program $end

    1 Program: ExtDefList
    2        | error

    3 ExtDefList: ExtDef ExtDefList
    4           | %empty
    5           | error

    6 ExtDef: Specifier ExtDecList SEMI
    7       | Specifier SEMI
    8       | Specifier FunDec SEMI
    9       | Specifier FunDec CompSt
   10       | error

   11 ExtDecList: VarDec
   12           | VarDec COMMA ExtDecList
   13           | error

   14 Specifier: TYPE
   15          | StructSpecifier
   16          | error

   17 StructSpecifier: STRUCT OptTag LC DefList RC
   18                | STRUCT Tag
   19                | error

   20 OptTag: ID
   21       | %empty
   22       | error

   23 Tag: ID
   24    | error

   25 VarDec: ID
   26       | VarDec LB INT RB
   27       | error

   28 FunDec: ID LP VarList RP
   29       | ID LP RP
   30       | error

   31 VarList: ParamDec COMMA VarList
   32        | ParamDec
   33        | error

   34 ParamDec: Specifier VarDec
   35         | error

   36 CompSt: LC DefList StmtList RC
   37       | error

   38 StmtList: Stmt StmtList
   39         | %empty
   40         | error

   41 Stmt: Exp SEMI
   42     | CompSt
   43     | RETURN Exp SEMI
   44     | IF LP Exp RP Stmt
   45     | IF LP Exp RP Stmt ELSE Stmt
   46     | WHILE LP Exp RP Stmt
   47     | error

   48 DefList: Def DefList
   49        | %empty
   50        | error

   51 Def: Specifier DecList SEMI
   52    | error

   53 DecList: Dec
   54        | Dec COMMA DecList
   55        | error

   56 Dec: VarDec
   57    | VarDec ASSIGNOP Exp
   58    | error

   59 Exp: Exp ASSIGNOP Exp
   60    | Exp AND Exp
   61    | Exp OR Exp
   62    | Exp RELOP Exp
   63    | Exp PLUS Exp
   64    | Exp MINUS Exp
   65    | Exp STAR Exp
   66    | Exp DIV Exp
   67    | LP Exp RP
   68    | MINUS Exp
   69    | NOT Exp
   70    | ID LP Args RP
   71    | ID LP RP
   72    | Exp LB Exp RB
   73    | Exp DOT ID
   74    | ID
   75    | INT
   76    | FLOAT
   77    | error

   78 Args: Exp COMMA Args
   79     | Exp
   80     | error


Terminals, with rules where they appear

    $end (0) 0
    error (256) 2 5 10 13 16 19 22 24 27 30 33 35 37 40 47 50 52 55 58 77 80
    SEMI <syntax> (258) 6 7 8 41 43 51
    COMMA <syntax> (259) 12 31 54 78
    ASSIGNOP <syntax> (260) 57 59
    RELOP <syntax> (261) 62
    PLUS <syntax> (262) 63
    MINUS <syntax> (263) 64 68
    STAR <syntax> (264) 65
    DIV <syntax> (265) 66
    AND <syntax> (266) 60
    OR <syntax> (267) 61
    DOT <syntax> (268) 73
    NOT <syntax> (269) 69
    TYPE <syntax> (270) 14
    LP <syntax> (271) 28 29 44 45 46 67 70 71
    RP <syntax> (272) 28 29 44 45 46 67 70 71
    LB <syntax> (273) 26 72
    RB <syntax> (274) 26 72
    LC <syntax> (275) 17 36
    RC <syntax> (276) 17 36
    STRUCT <syntax> (277) 17 18
    RETURN <syntax> (278) 43
    IF <syntax> (279) 44 45
    ELSE <syntax> (280) 45
    WHILE <syntax> (281) 46
    ID <syntax> (282) 20 23 25 28 29 70 71 73 74
    FLOAT <syntax> (283) 76
    INT <syntax> (284) 26 75
    LOWER_THAN_ELSE (285)


Nonterminals, with rules where they appear

    $accept (31)
        on left: 0
    Program <syntax> (32)
        on left: 1 2
        on right: 0
    ExtDefList <syntax> (33)
        on left: 3 4 5
        on right: 1 3
    ExtDef <syntax> (34)
        on left: 6 7 8 9 10
        on right: 3
    ExtDecList <syntax> (35)
        on left: 11 12 13
        on right: 6 12
    Specifier <syntax> (36)
        on left: 14 15 16
        on right: 6 7 8 9 34 51
    StructSpecifier <syntax> (37)
        on left: 17 18 19
        on right: 15
    OptTag <syntax> (38)
        on left: 20 21 22
        on right: 17
    Tag <syntax> (39)
        on left: 23 24
        on right: 18
    VarDec <syntax> (40)
        on left: 25 26 27
        on right: 11 12 26 34 56 57
    FunDec <syntax> (41)
        on left: 28 29 30
        on right: 8 9
    VarList <syntax> (42)
        on left: 31 32 33
        on right: 28 31
    ParamDec <syntax> (43)
        on left: 34 35
        on right: 31 32
    CompSt <syntax> (44)
        on left: 36 37
        on right: 9 42
    StmtList <syntax> (45)
        on left: 38 39 40
        on right: 36 38
    Stmt <syntax> (46)
        on left: 41 42 43 44 45 46 47
        on right: 38 44 45 46
    DefList <syntax> (47)
        on left: 48 49 50
        on right: 17 36 48
    Def <syntax> (48)
        on left: 51 52
        on right: 48
    DecList <syntax> (49)
        on left: 53 54 55
        on right: 51 54
    Dec <syntax> (50)
        on left: 56 57 58
        on right: 53 54
    Exp <syntax> (51)
        on left: 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77
        on right: 41 43 44 45 46 57 59 60 61 62 63 64 65 66 67 68 69 72 73 78 79
    Args <syntax> (52)
        on left: 78 79 80
        on right: 70 78


State 0

    0 $accept: . Program $end

    error   shift, and go to state 1
    TYPE    shift, and go to state 2
    STRUCT  shift, and go to state 3

    $end  reduce using rule 4 (ExtDefList)

    Program          go to state 4
    ExtDefList       go to state 5
    ExtDef           go to state 6
    Specifier        go to state 7
    StructSpecifier  go to state 8


State 1

    2 Program: error .
    5 ExtDefList: error .
   10 ExtDef: error .
   16 Specifier: error .
   19 StructSpecifier: error .

    $end      reduce using rule 2 (Program)
    $end      [reduce using rule 5 (ExtDefList)]
    $end      [reduce using rule 10 (ExtDef)]
    error     reduce using rule 10 (ExtDef)
    error     [reduce using rule 16 (Specifier)]
    error     [reduce using rule 19 (StructSpecifier)]
    SEMI      reduce using rule 16 (Specifier)
    SEMI      [reduce using rule 19 (StructSpecifier)]
    ID        reduce using rule 16 (Specifier)
    ID        [reduce using rule 19 (StructSpecifier)]
    $default  reduce using rule 10 (ExtDef)


State 2

   14 Specifier: TYPE .

    $default  reduce using rule 14 (Specifier)


State 3

   17 StructSpecifier: STRUCT . OptTag LC DefList RC
   18                | STRUCT . Tag

    error  shift, and go to state 9
    ID     shift, and go to state 10

    LC  reduce using rule 21 (OptTag)

    OptTag  go to state 11
    Tag     go to state 12


State 4

    0 $accept: Program . $end

    $end  shift, and go to state 13


State 5

    1 Program: ExtDefList .

    $default  reduce using rule 1 (Program)


State 6

    3 ExtDefList: ExtDef . ExtDefList

    error   shift, and go to state 14
    TYPE    shift, and go to state 2
    STRUCT  shift, and go to state 3

    $end  reduce using rule 4 (ExtDefList)

    ExtDefList       go to state 15
    ExtDef           go to state 6
    Specifier        go to state 7
    StructSpecifier  go to state 8


State 7

    6 ExtDef: Specifier . ExtDecList SEMI
    7       | Specifier . SEMI
    8       | Specifier . FunDec SEMI
    9       | Specifier . FunDec CompSt

    error  shift, and go to state 16
    SEMI   shift, and go to state 17
    ID     shift, and go to state 18

    ExtDecList  go to state 19
    VarDec      go to state 20
    FunDec      go to state 21


State 8

   15 Specifier: StructSpecifier .

    $default  reduce using rule 15 (Specifier)


State 9

   22 OptTag: error .
   24 Tag: error .

    LC        reduce using rule 22 (OptTag)
    $default  reduce using rule 24 (Tag)


State 10

   20 OptTag: ID .
   23 Tag: ID .

    LC        reduce using rule 20 (OptTag)
    $default  reduce using rule 23 (Tag)


State 11

   17 StructSpecifier: STRUCT OptTag . LC DefList RC

    LC  shift, and go to state 22


State 12

   18 StructSpecifier: STRUCT Tag .

    $default  reduce using rule 18 (StructSpecifier)


State 13

    0 $accept: Program $end .

    $default  accept


State 14

    5 ExtDefList: error .
   10 ExtDef: error .
   16 Specifier: error .
   19 StructSpecifier: error .

    $end      reduce using rule 5 (ExtDefList)
    $end      [reduce using rule 10 (ExtDef)]
    error     reduce using rule 10 (ExtDef)
    error     [reduce using rule 16 (Specifier)]
    error     [reduce using rule 19 (StructSpecifier)]
    SEMI      reduce using rule 16 (Specifier)
    SEMI      [reduce using rule 19 (StructSpecifier)]
    ID        reduce using rule 16 (Specifier)
    ID        [reduce using rule 19 (StructSpecifier)]
    $default  reduce using rule 10 (ExtDef)


State 15

    3 ExtDefList: ExtDef ExtDefList .

    $default  reduce using rule 3 (ExtDefList)


State 16

   13 ExtDecList: error .
   27 VarDec: error .
   30 FunDec: error .

    error     reduce using rule 30 (FunDec)
    SEMI      reduce using rule 13 (ExtDecList)
    SEMI      [reduce using rule 27 (VarDec)]
    SEMI      [reduce using rule 30 (FunDec)]
    LC        reduce using rule 30 (FunDec)
    $default  reduce using rule 27 (VarDec)


State 17

    7 ExtDef: Specifier SEMI .

    $default  reduce using rule 7 (ExtDef)


State 18

   25 VarDec: ID .
   28 FunDec: ID . LP VarList RP
   29       | ID . LP RP

    LP  shift, and go to state 23

    $default  reduce using rule 25 (VarDec)


State 19

    6 ExtDef: Specifier ExtDecList . SEMI

    SEMI  shift, and go to state 24


State 20

   11 ExtDecList: VarDec .
   12           | VarDec . COMMA ExtDecList
   26 VarDec: VarDec . LB INT RB

    COMMA  shift, and go to state 25
    LB     shift, and go to state 26

    $default  reduce using rule 11 (ExtDecList)


State 21

    8 ExtDef: Specifier FunDec . SEMI
    9       | Specifier FunDec . CompSt

    error  shift, and go to state 27
    SEMI   shift, and go to state 28
    LC     shift, and go to state 29

    CompSt  go to state 30


State 22

   17 StructSpecifier: STRUCT OptTag LC . DefList RC

    error   shift, and go to state 31
    TYPE    shift, and go to state 2
    STRUCT  shift, and go to state 3

    RC  reduce using rule 49 (DefList)

    Specifier        go to state 32
    StructSpecifier  go to state 8
    DefList          go to state 33
    Def              go to state 34


State 23

   28 FunDec: ID LP . VarList RP
   29       | ID LP . RP

    error   shift, and go to state 35
    TYPE    shift, and go to state 2
    RP      shift, and go to state 36
    STRUCT  shift, and go to state 3

    Specifier        go to state 37
    StructSpecifier  go to state 8
    VarList          go to state 38
    ParamDec         go to state 39


State 24

    6 ExtDef: Specifier ExtDecList SEMI .

    $default  reduce using rule 6 (ExtDef)


State 25

   12 ExtDecList: VarDec COMMA . ExtDecList

    error  shift, and go to state 40
    ID     shift, and go to state 41

    ExtDecList  go to state 42
    VarDec      go to state 20


State 26

   26 VarDec: VarDec LB . INT RB

    INT  shift, and go to state 43


State 27

   37 CompSt: error .

    $default  reduce using rule 37 (CompSt)


State 28

    8 ExtDef: Specifier FunDec SEMI .

    $default  reduce using rule 8 (ExtDef)


State 29

   36 CompSt: LC . DefList StmtList RC

    error   shift, and go to state 31
    TYPE    shift, and go to state 2
    STRUCT  shift, and go to state 3

    error   [reduce using rule 49 (DefList)]
    MINUS   reduce using rule 49 (DefList)
    NOT     reduce using rule 49 (DefList)
    LP      reduce using rule 49 (DefList)
    LC      reduce using rule 49 (DefList)
    RC      reduce using rule 49 (DefList)
    RETURN  reduce using rule 49 (DefList)
    IF      reduce using rule 49 (DefList)
    WHILE   reduce using rule 49 (DefList)
    ID      reduce using rule 49 (DefList)
    FLOAT   reduce using rule 49 (DefList)
    INT     reduce using rule 49 (DefList)

    Specifier        go to state 32
    StructSpecifier  go to state 8
    DefList          go to state 44
    Def              go to state 34


State 30

    9 ExtDef: Specifier FunDec CompSt .

    $default  reduce using rule 9 (ExtDef)


State 31

   16 Specifier: error .
   19 StructSpecifier: error .
   50 DefList: error .
   52 Def: error .

    error     reduce using rule 16 (Specifier)
    error     [reduce using rule 19 (StructSpecifier)]
    error     [reduce using rule 50 (DefList)]
    error     [reduce using rule 52 (Def)]
    MINUS     reduce using rule 50 (DefList)
    MINUS     [reduce using rule 52 (Def)]
    NOT       reduce using rule 50 (DefList)
    NOT       [reduce using rule 52 (Def)]
    TYPE      reduce using rule 52 (Def)
    LP        reduce using rule 50 (DefList)
    LP        [reduce using rule 52 (Def)]
    LC        reduce using rule 50 (DefList)
    LC        [reduce using rule 52 (Def)]
    RC        reduce using rule 50 (DefList)
    RC        [reduce using rule 52 (Def)]
    STRUCT    reduce using rule 52 (Def)
    RETURN    reduce using rule 50 (DefList)
    RETURN    [reduce using rule 52 (Def)]
    IF        reduce using rule 50 (DefList)
    IF        [reduce using rule 52 (Def)]
    WHILE     reduce using rule 50 (DefList)
    WHILE     [reduce using rule 52 (Def)]
    ID        reduce using rule 16 (Specifier)
    ID        [reduce using rule 19 (StructSpecifier)]
    ID        [reduce using rule 50 (DefList)]
    ID        [reduce using rule 52 (Def)]
    FLOAT     reduce using rule 50 (DefList)
    FLOAT     [reduce using rule 52 (Def)]
    INT       reduce using rule 50 (DefList)
    INT       [reduce using rule 52 (Def)]
    $default  reduce using rule 50 (DefList)


State 32

   51 Def: Specifier . DecList SEMI

    error  shift, and go to state 45
    ID     shift, and go to state 41

    VarDec   go to state 46
    DecList  go to state 47
    Dec      go to state 48


State 33

   17 StructSpecifier: STRUCT OptTag LC DefList . RC

    RC  shift, and go to state 49


State 34

   48 DefList: Def . DefList

    error   shift, and go to state 31
    TYPE    shift, and go to state 2
    STRUCT  shift, and go to state 3

    error   [reduce using rule 49 (DefList)]
    MINUS   reduce using rule 49 (DefList)
    NOT     reduce using rule 49 (DefList)
    LP      reduce using rule 49 (DefList)
    LC      reduce using rule 49 (DefList)
    RC      reduce using rule 49 (DefList)
    RETURN  reduce using rule 49 (DefList)
    IF      reduce using rule 49 (DefList)
    WHILE   reduce using rule 49 (DefList)
    ID      reduce using rule 49 (DefList)
    FLOAT   reduce using rule 49 (DefList)
    INT     reduce using rule 49 (DefList)

    Specifier        go to state 32
    StructSpecifier  go to state 8
    DefList          go to state 50
    Def              go to state 34


State 35

   16 Specifier: error .
   19 StructSpecifier: error .
   33 VarList: error .
   35 ParamDec: error .

    error     reduce using rule 16 (Specifier)
    error     [reduce using rule 19 (StructSpecifier)]
    COMMA     reduce using rule 35 (ParamDec)
    RP        reduce using rule 33 (VarList)
    RP        [reduce using rule 35 (ParamDec)]
    ID        reduce using rule 16 (Specifier)
    ID        [reduce using rule 19 (StructSpecifier)]
    $default  reduce using rule 16 (Specifier)


State 36

   29 FunDec: ID LP RP .

    $default  reduce using rule 29 (FunDec)


State 37

   34 ParamDec: Specifier . VarDec

    error  shift, and go to state 51
    ID     shift, and go to state 41

    VarDec  go to state 52


State 38

   28 FunDec: ID LP VarList . RP

    RP  shift, and go to state 53


State 39

   31 VarList: ParamDec . COMMA VarList
   32        | ParamDec .

    COMMA  shift, and go to state 54

    $default  reduce using rule 32 (VarList)


State 40

   13 ExtDecList: error .
   27 VarDec: error .

    SEMI      reduce using rule 13 (ExtDecList)
    SEMI      [reduce using rule 27 (VarDec)]
    $default  reduce using rule 27 (VarDec)


State 41

   25 VarDec: ID .

    $default  reduce using rule 25 (VarDec)


State 42

   12 ExtDecList: VarDec COMMA ExtDecList .

    $default  reduce using rule 12 (ExtDecList)


State 43

   26 VarDec: VarDec LB INT . RB

    RB  shift, and go to state 55


State 44

   36 CompSt: LC DefList . StmtList RC

    error   shift, and go to state 56
    MINUS   shift, and go to state 57
    NOT     shift, and go to state 58
    LP      shift, and go to state 59
    LC      shift, and go to state 29
    RETURN  shift, and go to state 60
    IF      shift, and go to state 61
    WHILE   shift, and go to state 62
    ID      shift, and go to state 63
    FLOAT   shift, and go to state 64
    INT     shift, and go to state 65

    RC  reduce using rule 39 (StmtList)

    CompSt    go to state 66
    StmtList  go to state 67
    Stmt      go to state 68
    Exp       go to state 69


State 45

   27 VarDec: error .
   55 DecList: error .
   58 Dec: error .

    SEMI      reduce using rule 27 (VarDec)
    SEMI      [reduce using rule 55 (DecList)]
    SEMI      [reduce using rule 58 (Dec)]
    COMMA     reduce using rule 27 (VarDec)
    COMMA     [reduce using rule 58 (Dec)]
    $default  reduce using rule 27 (VarDec)


State 46

   26 VarDec: VarDec . LB INT RB
   56 Dec: VarDec .
   57    | VarDec . ASSIGNOP Exp

    ASSIGNOP  shift, and go to state 70
    LB        shift, and go to state 26

    $default  reduce using rule 56 (Dec)


State 47

   51 Def: Specifier DecList . SEMI

    SEMI  shift, and go to state 71


State 48

   53 DecList: Dec .
   54        | Dec . COMMA DecList

    COMMA  shift, and go to state 72

    $default  reduce using rule 53 (DecList)


State 49

   17 StructSpecifier: STRUCT OptTag LC DefList RC .

    $default  reduce using rule 17 (StructSpecifier)


State 50

   48 DefList: Def DefList .

    $default  reduce using rule 48 (DefList)


State 51

   27 VarDec: error .

    $default  reduce using rule 27 (VarDec)


State 52

   26 VarDec: VarDec . LB INT RB
   34 ParamDec: Specifier VarDec .

    LB  shift, and go to state 26

    $default  reduce using rule 34 (ParamDec)


State 53

   28 FunDec: ID LP VarList RP .

    $default  reduce using rule 28 (FunDec)


State 54

   31 VarList: ParamDec COMMA . VarList

    error   shift, and go to state 35
    TYPE    shift, and go to state 2
    STRUCT  shift, and go to state 3

    Specifier        go to state 37
    StructSpecifier  go to state 8
    VarList          go to state 73
    ParamDec         go to state 39


State 55

   26 VarDec: VarDec LB INT RB .

    $default  reduce using rule 26 (VarDec)


State 56

   37 CompSt: error .
   40 StmtList: error .
   47 Stmt: error .
   77 Exp: error .

    error     reduce using rule 37 (CompSt)
    error     [reduce using rule 47 (Stmt)]
    SEMI      reduce using rule 77 (Exp)
    ASSIGNOP  reduce using rule 77 (Exp)
    RELOP     reduce using rule 77 (Exp)
    PLUS      reduce using rule 77 (Exp)
    MINUS     reduce using rule 37 (CompSt)
    MINUS     [reduce using rule 47 (Stmt)]
    MINUS     [reduce using rule 77 (Exp)]
    STAR      reduce using rule 77 (Exp)
    DIV       reduce using rule 77 (Exp)
    AND       reduce using rule 77 (Exp)
    OR        reduce using rule 77 (Exp)
    DOT       reduce using rule 77 (Exp)
    NOT       reduce using rule 37 (CompSt)
    NOT       [reduce using rule 47 (Stmt)]
    LP        reduce using rule 37 (CompSt)
    LP        [reduce using rule 47 (Stmt)]
    LB        reduce using rule 77 (Exp)
    LC        reduce using rule 37 (CompSt)
    LC        [reduce using rule 47 (Stmt)]
    RC        reduce using rule 37 (CompSt)
    RC        [reduce using rule 40 (StmtList)]
    RC        [reduce using rule 47 (Stmt)]
    RETURN    reduce using rule 37 (CompSt)
    RETURN    [reduce using rule 47 (Stmt)]
    IF        reduce using rule 37 (CompSt)
    IF        [reduce using rule 47 (Stmt)]
    WHILE     reduce using rule 37 (CompSt)
    WHILE     [reduce using rule 47 (Stmt)]
    ID        reduce using rule 37 (CompSt)
    ID        [reduce using rule 47 (Stmt)]
    FLOAT     reduce using rule 37 (CompSt)
    FLOAT     [reduce using rule 47 (Stmt)]
    INT       reduce using rule 37 (CompSt)
    INT       [reduce using rule 47 (Stmt)]
    $default  reduce using rule 37 (CompSt)


State 57

   68 Exp: MINUS . Exp

    error  shift, and go to state 74
    MINUS  shift, and go to state 57
    NOT    shift, and go to state 58
    LP     shift, and go to state 59
    ID     shift, and go to state 63
    FLOAT  shift, and go to state 64
    INT    shift, and go to state 65

    Exp  go to state 75


State 58

   69 Exp: NOT . Exp

    error  shift, and go to state 74
    MINUS  shift, and go to state 57
    NOT    shift, and go to state 58
    LP     shift, and go to state 59
    ID     shift, and go to state 63
    FLOAT  shift, and go to state 64
    INT    shift, and go to state 65

    Exp  go to state 76


State 59

   67 Exp: LP . Exp RP

    error  shift, and go to state 74
    MINUS  shift, and go to state 57
    NOT    shift, and go to state 58
    LP     shift, and go to state 59
    ID     shift, and go to state 63
    FLOAT  shift, and go to state 64
    INT    shift, and go to state 65

    Exp  go to state 77


State 60

   43 Stmt: RETURN . Exp SEMI

    error  shift, and go to state 74
    MINUS  shift, and go to state 57
    NOT    shift, and go to state 58
    LP     shift, and go to state 59
    ID     shift, and go to state 63
    FLOAT  shift, and go to state 64
    INT    shift, and go to state 65

    Exp  go to state 78


State 61

   44 Stmt: IF . LP Exp RP Stmt
   45     | IF . LP Exp RP Stmt ELSE Stmt

    LP  shift, and go to state 79


State 62

   46 Stmt: WHILE . LP Exp RP Stmt

    LP  shift, and go to state 80


State 63

   70 Exp: ID . LP Args RP
   71    | ID . LP RP
   74    | ID .

    LP  shift, and go to state 81

    $default  reduce using rule 74 (Exp)


State 64

   76 Exp: FLOAT .

    $default  reduce using rule 76 (Exp)


State 65

   75 Exp: INT .

    $default  reduce using rule 75 (Exp)


State 66

   42 Stmt: CompSt .

    $default  reduce using rule 42 (Stmt)


State 67

   36 CompSt: LC DefList StmtList . RC

    RC  shift, and go to state 82


State 68

   38 StmtList: Stmt . StmtList

    error   shift, and go to state 56
    MINUS   shift, and go to state 57
    NOT     shift, and go to state 58
    LP      shift, and go to state 59
    LC      shift, and go to state 29
    RETURN  shift, and go to state 60
    IF      shift, and go to state 61
    WHILE   shift, and go to state 62
    ID      shift, and go to state 63
    FLOAT   shift, and go to state 64
    INT     shift, and go to state 65

    RC  reduce using rule 39 (StmtList)

    CompSt    go to state 66
    StmtList  go to state 83
    Stmt      go to state 68
    Exp       go to state 69


State 69

   41 Stmt: Exp . SEMI
   59 Exp: Exp . ASSIGNOP Exp
   60    | Exp . AND Exp
   61    | Exp . OR Exp
   62    | Exp . RELOP Exp
   63    | Exp . PLUS Exp
   64    | Exp . MINUS Exp
   65    | Exp . STAR Exp
   66    | Exp . DIV Exp
   72    | Exp . LB Exp RB
   73    | Exp . DOT ID

    SEMI      shift, and go to state 84
    ASSIGNOP  shift, and go to state 85
    RELOP     shift, and go to state 86
    PLUS      shift, and go to state 87
    MINUS     shift, and go to state 88
    STAR      shift, and go to state 89
    DIV       shift, and go to state 90
    AND       shift, and go to state 91
    OR        shift, and go to state 92
    DOT       shift, and go to state 93
    LB        shift, and go to state 94


State 70

   57 Dec: VarDec ASSIGNOP . Exp

    error  shift, and go to state 74
    MINUS  shift, and go to state 57
    NOT    shift, and go to state 58
    LP     shift, and go to state 59
    ID     shift, and go to state 63
    FLOAT  shift, and go to state 64
    INT    shift, and go to state 65

    Exp  go to state 95


State 71

   51 Def: Specifier DecList SEMI .

    $default  reduce using rule 51 (Def)


State 72

   54 DecList: Dec COMMA . DecList

    error  shift, and go to state 45
    ID     shift, and go to state 41

    VarDec   go to state 46
    DecList  go to state 96
    Dec      go to state 48


State 73

   31 VarList: ParamDec COMMA VarList .

    $default  reduce using rule 31 (VarList)


State 74

   77 Exp: error .

    $default  reduce using rule 77 (Exp)


State 75

   59 Exp: Exp . ASSIGNOP Exp
   60    | Exp . AND Exp
   61    | Exp . OR Exp
   62    | Exp . RELOP Exp
   63    | Exp . PLUS Exp
   64    | Exp . MINUS Exp
   65    | Exp . STAR Exp
   66    | Exp . DIV Exp
   68    | MINUS Exp .
   72    | Exp . LB Exp RB
   73    | Exp . DOT ID

    DOT  shift, and go to state 93
    LB   shift, and go to state 94

    $default  reduce using rule 68 (Exp)


State 76

   59 Exp: Exp . ASSIGNOP Exp
   60    | Exp . AND Exp
   61    | Exp . OR Exp
   62    | Exp . RELOP Exp
   63    | Exp . PLUS Exp
   64    | Exp . MINUS Exp
   65    | Exp . STAR Exp
   66    | Exp . DIV Exp
   69    | NOT Exp .
   72    | Exp . LB Exp RB
   73    | Exp . DOT ID

    DOT  shift, and go to state 93
    LB   shift, and go to state 94

    $default  reduce using rule 69 (Exp)


State 77

   59 Exp: Exp . ASSIGNOP Exp
   60    | Exp . AND Exp
   61    | Exp . OR Exp
   62    | Exp . RELOP Exp
   63    | Exp . PLUS Exp
   64    | Exp . MINUS Exp
   65    | Exp . STAR Exp
   66    | Exp . DIV Exp
   67    | LP Exp . RP
   72    | Exp . LB Exp RB
   73    | Exp . DOT ID

    ASSIGNOP  shift, and go to state 85
    RELOP     shift, and go to state 86
    PLUS      shift, and go to state 87
    MINUS     shift, and go to state 88
    STAR      shift, and go to state 89
    DIV       shift, and go to state 90
    AND       shift, and go to state 91
    OR        shift, and go to state 92
    DOT       shift, and go to state 93
    RP        shift, and go to state 97
    LB        shift, and go to state 94


State 78

   43 Stmt: RETURN Exp . SEMI
   59 Exp: Exp . ASSIGNOP Exp
   60    | Exp . AND Exp
   61    | Exp . OR Exp
   62    | Exp . RELOP Exp
   63    | Exp . PLUS Exp
   64    | Exp . MINUS Exp
   65    | Exp . STAR Exp
   66    | Exp . DIV Exp
   72    | Exp . LB Exp RB
   73    | Exp . DOT ID

    SEMI      shift, and go to state 98
    ASSIGNOP  shift, and go to state 85
    RELOP     shift, and go to state 86
    PLUS      shift, and go to state 87
    MINUS     shift, and go to state 88
    STAR      shift, and go to state 89
    DIV       shift, and go to state 90
    AND       shift, and go to state 91
    OR        shift, and go to state 92
    DOT       shift, and go to state 93
    LB        shift, and go to state 94


State 79

   44 Stmt: IF LP . Exp RP Stmt
   45     | IF LP . Exp RP Stmt ELSE Stmt

    error  shift, and go to state 74
    MINUS  shift, and go to state 57
    NOT    shift, and go to state 58
    LP     shift, and go to state 59
    ID     shift, and go to state 63
    FLOAT  shift, and go to state 64
    INT    shift, and go to state 65

    Exp  go to state 99


State 80

   46 Stmt: WHILE LP . Exp RP Stmt

    error  shift, and go to state 74
    MINUS  shift, and go to state 57
    NOT    shift, and go to state 58
    LP     shift, and go to state 59
    ID     shift, and go to state 63
    FLOAT  shift, and go to state 64
    INT    shift, and go to state 65

    Exp  go to state 100


State 81

   70 Exp: ID LP . Args RP
   71    | ID LP . RP

    error  shift, and go to state 101
    MINUS  shift, and go to state 57
    NOT    shift, and go to state 58
    LP     shift, and go to state 59
    RP     shift, and go to state 102
    ID     shift, and go to state 63
    FLOAT  shift, and go to state 64
    INT    shift, and go to state 65

    Exp   go to state 103
    Args  go to state 104


State 82

   36 CompSt: LC DefList StmtList RC .

    $default  reduce using rule 36 (CompSt)


State 83

   38 StmtList: Stmt StmtList .

    $default  reduce using rule 38 (StmtList)


State 84

   41 Stmt: Exp SEMI .

    $default  reduce using rule 41 (Stmt)


State 85

   59 Exp: Exp ASSIGNOP . Exp

    error  shift, and go to state 74
    MINUS  shift, and go to state 57
    NOT    shift, and go to state 58
    LP     shift, and go to state 59
    ID     shift, and go to state 63
    FLOAT  shift, and go to state 64
    INT    shift, and go to state 65

    Exp  go to state 105


State 86

   62 Exp: Exp RELOP . Exp

    error  shift, and go to state 74
    MINUS  shift, and go to state 57
    NOT    shift, and go to state 58
    LP     shift, and go to state 59
    ID     shift, and go to state 63
    FLOAT  shift, and go to state 64
    INT    shift, and go to state 65

    Exp  go to state 106


State 87

   63 Exp: Exp PLUS . Exp

    error  shift, and go to state 74
    MINUS  shift, and go to state 57
    NOT    shift, and go to state 58
    LP     shift, and go to state 59
    ID     shift, and go to state 63
    FLOAT  shift, and go to state 64
    INT    shift, and go to state 65

    Exp  go to state 107


State 88

   64 Exp: Exp MINUS . Exp

    error  shift, and go to state 74
    MINUS  shift, and go to state 57
    NOT    shift, and go to state 58
    LP     shift, and go to state 59
    ID     shift, and go to state 63
    FLOAT  shift, and go to state 64
    INT    shift, and go to state 65

    Exp  go to state 108


State 89

   65 Exp: Exp STAR . Exp

    error  shift, and go to state 74
    MINUS  shift, and go to state 57
    NOT    shift, and go to state 58
    LP     shift, and go to state 59
    ID     shift, and go to state 63
    FLOAT  shift, and go to state 64
    INT    shift, and go to state 65

    Exp  go to state 109


State 90

   66 Exp: Exp DIV . Exp

    error  shift, and go to state 74
    MINUS  shift, and go to state 57
    NOT    shift, and go to state 58
    LP     shift, and go to state 59
    ID     shift, and go to state 63
    FLOAT  shift, and go to state 64
    INT    shift, and go to state 65

    Exp  go to state 110


State 91

   60 Exp: Exp AND . Exp

    error  shift, and go to state 74
    MINUS  shift, and go to state 57
    NOT    shift, and go to state 58
    LP     shift, and go to state 59
    ID     shift, and go to state 63
    FLOAT  shift, and go to state 64
    INT    shift, and go to state 65

    Exp  go to state 111


State 92

   61 Exp: Exp OR . Exp

    error  shift, and go to state 74
    MINUS  shift, and go to state 57
    NOT    shift, and go to state 58
    LP     shift, and go to state 59
    ID     shift, and go to state 63
    FLOAT  shift, and go to state 64
    INT    shift, and go to state 65

    Exp  go to state 112


State 93

   73 Exp: Exp DOT . ID

    ID  shift, and go to state 113


State 94

   72 Exp: Exp LB . Exp RB

    error  shift, and go to state 74
    MINUS  shift, and go to state 57
    NOT    shift, and go to state 58
    LP     shift, and go to state 59
    ID     shift, and go to state 63
    FLOAT  shift, and go to state 64
    INT    shift, and go to state 65

    Exp  go to state 114


State 95

   57 Dec: VarDec ASSIGNOP Exp .
   59 Exp: Exp . ASSIGNOP Exp
   60    | Exp . AND Exp
   61    | Exp . OR Exp
   62    | Exp . RELOP Exp
   63    | Exp . PLUS Exp
   64    | Exp . MINUS Exp
   65    | Exp . STAR Exp
   66    | Exp . DIV Exp
   72    | Exp . LB Exp RB
   73    | Exp . DOT ID

    ASSIGNOP  shift, and go to state 85
    RELOP     shift, and go to state 86
    PLUS      shift, and go to state 87
    MINUS     shift, and go to state 88
    STAR      shift, and go to state 89
    DIV       shift, and go to state 90
    AND       shift, and go to state 91
    OR        shift, and go to state 92
    DOT       shift, and go to state 93
    LB        shift, and go to state 94

    $default  reduce using rule 57 (Dec)


State 96

   54 DecList: Dec COMMA DecList .

    $default  reduce using rule 54 (DecList)


State 97

   67 Exp: LP Exp RP .

    $default  reduce using rule 67 (Exp)


State 98

   43 Stmt: RETURN Exp SEMI .

    $default  reduce using rule 43 (Stmt)


State 99

   44 Stmt: IF LP Exp . RP Stmt
   45     | IF LP Exp . RP Stmt ELSE Stmt
   59 Exp: Exp . ASSIGNOP Exp
   60    | Exp . AND Exp
   61    | Exp . OR Exp
   62    | Exp . RELOP Exp
   63    | Exp . PLUS Exp
   64    | Exp . MINUS Exp
   65    | Exp . STAR Exp
   66    | Exp . DIV Exp
   72    | Exp . LB Exp RB
   73    | Exp . DOT ID

    ASSIGNOP  shift, and go to state 85
    RELOP     shift, and go to state 86
    PLUS      shift, and go to state 87
    MINUS     shift, and go to state 88
    STAR      shift, and go to state 89
    DIV       shift, and go to state 90
    AND       shift, and go to state 91
    OR        shift, and go to state 92
    DOT       shift, and go to state 93
    RP        shift, and go to state 115
    LB        shift, and go to state 94


State 100

   46 Stmt: WHILE LP Exp . RP Stmt
   59 Exp: Exp . ASSIGNOP Exp
   60    | Exp . AND Exp
   61    | Exp . OR Exp
   62    | Exp . RELOP Exp
   63    | Exp . PLUS Exp
   64    | Exp . MINUS Exp
   65    | Exp . STAR Exp
   66    | Exp . DIV Exp
   72    | Exp . LB Exp RB
   73    | Exp . DOT ID

    ASSIGNOP  shift, and go to state 85
    RELOP     shift, and go to state 86
    PLUS      shift, and go to state 87
    MINUS     shift, and go to state 88
    STAR      shift, and go to state 89
    DIV       shift, and go to state 90
    AND       shift, and go to state 91
    OR        shift, and go to state 92
    DOT       shift, and go to state 93
    RP        shift, and go to state 116
    LB        shift, and go to state 94


State 101

   77 Exp: error .
   80 Args: error .

    RP        reduce using rule 77 (Exp)
    RP        [reduce using rule 80 (Args)]
    $default  reduce using rule 77 (Exp)


State 102

   71 Exp: ID LP RP .

    $default  reduce using rule 71 (Exp)


State 103

   59 Exp: Exp . ASSIGNOP Exp
   60    | Exp . AND Exp
   61    | Exp . OR Exp
   62    | Exp . RELOP Exp
   63    | Exp . PLUS Exp
   64    | Exp . MINUS Exp
   65    | Exp . STAR Exp
   66    | Exp . DIV Exp
   72    | Exp . LB Exp RB
   73    | Exp . DOT ID
   78 Args: Exp . COMMA Args
   79     | Exp .

    COMMA     shift, and go to state 117
    ASSIGNOP  shift, and go to state 85
    RELOP     shift, and go to state 86
    PLUS      shift, and go to state 87
    MINUS     shift, and go to state 88
    STAR      shift, and go to state 89
    DIV       shift, and go to state 90
    AND       shift, and go to state 91
    OR        shift, and go to state 92
    DOT       shift, and go to state 93
    LB        shift, and go to state 94

    $default  reduce using rule 79 (Args)


State 104

   70 Exp: ID LP Args . RP

    RP  shift, and go to state 118


State 105

   59 Exp: Exp . ASSIGNOP Exp
   59    | Exp ASSIGNOP Exp .
   60    | Exp . AND Exp
   61    | Exp . OR Exp
   62    | Exp . RELOP Exp
   63    | Exp . PLUS Exp
   64    | Exp . MINUS Exp
   65    | Exp . STAR Exp
   66    | Exp . DIV Exp
   72    | Exp . LB Exp RB
   73    | Exp . DOT ID

    ASSIGNOP  shift, and go to state 85
    RELOP     shift, and go to state 86
    PLUS      shift, and go to state 87
    MINUS     shift, and go to state 88
    STAR      shift, and go to state 89
    DIV       shift, and go to state 90
    AND       shift, and go to state 91
    OR        shift, and go to state 92
    DOT       shift, and go to state 93
    LB        shift, and go to state 94

    $default  reduce using rule 59 (Exp)


State 106

   59 Exp: Exp . ASSIGNOP Exp
   60    | Exp . AND Exp
   61    | Exp . OR Exp
   62    | Exp . RELOP Exp
   62    | Exp RELOP Exp .
   63    | Exp . PLUS Exp
   64    | Exp . MINUS Exp
   65    | Exp . STAR Exp
   66    | Exp . DIV Exp
   72    | Exp . LB Exp RB
   73    | Exp . DOT ID

    PLUS   shift, and go to state 87
    MINUS  shift, and go to state 88
    STAR   shift, and go to state 89
    DIV    shift, and go to state 90
    DOT    shift, and go to state 93
    LB     shift, and go to state 94

    $default  reduce using rule 62 (Exp)


State 107

   59 Exp: Exp . ASSIGNOP Exp
   60    | Exp . AND Exp
   61    | Exp . OR Exp
   62    | Exp . RELOP Exp
   63    | Exp . PLUS Exp
   63    | Exp PLUS Exp .
   64    | Exp . MINUS Exp
   65    | Exp . STAR Exp
   66    | Exp . DIV Exp
   72    | Exp . LB Exp RB
   73    | Exp . DOT ID

    STAR  shift, and go to state 89
    DIV   shift, and go to state 90
    DOT   shift, and go to state 93
    LB    shift, and go to state 94

    $default  reduce using rule 63 (Exp)


State 108

   59 Exp: Exp . ASSIGNOP Exp
   60    | Exp . AND Exp
   61    | Exp . OR Exp
   62    | Exp . RELOP Exp
   63    | Exp . PLUS Exp
   64    | Exp . MINUS Exp
   64    | Exp MINUS Exp .
   65    | Exp . STAR Exp
   66    | Exp . DIV Exp
   72    | Exp . LB Exp RB
   73    | Exp . DOT ID

    STAR  shift, and go to state 89
    DIV   shift, and go to state 90
    DOT   shift, and go to state 93
    LB    shift, and go to state 94

    $default  reduce using rule 64 (Exp)


State 109

   59 Exp: Exp . ASSIGNOP Exp
   60    | Exp . AND Exp
   61    | Exp . OR Exp
   62    | Exp . RELOP Exp
   63    | Exp . PLUS Exp
   64    | Exp . MINUS Exp
   65    | Exp . STAR Exp
   65    | Exp STAR Exp .
   66    | Exp . DIV Exp
   72    | Exp . LB Exp RB
   73    | Exp . DOT ID

    DOT  shift, and go to state 93
    LB   shift, and go to state 94

    $default  reduce using rule 65 (Exp)


State 110

   59 Exp: Exp . ASSIGNOP Exp
   60    | Exp . AND Exp
   61    | Exp . OR Exp
   62    | Exp . RELOP Exp
   63    | Exp . PLUS Exp
   64    | Exp . MINUS Exp
   65    | Exp . STAR Exp
   66    | Exp . DIV Exp
   66    | Exp DIV Exp .
   72    | Exp . LB Exp RB
   73    | Exp . DOT ID

    DOT  shift, and go to state 93
    LB   shift, and go to state 94

    $default  reduce using rule 66 (Exp)


State 111

   59 Exp: Exp . ASSIGNOP Exp
   60    | Exp . AND Exp
   60    | Exp AND Exp .
   61    | Exp . OR Exp
   62    | Exp . RELOP Exp
   63    | Exp . PLUS Exp
   64    | Exp . MINUS Exp
   65    | Exp . STAR Exp
   66    | Exp . DIV Exp
   72    | Exp . LB Exp RB
   73    | Exp . DOT ID

    RELOP  shift, and go to state 86
    PLUS   shift, and go to state 87
    MINUS  shift, and go to state 88
    STAR   shift, and go to state 89
    DIV    shift, and go to state 90
    DOT    shift, and go to state 93
    LB     shift, and go to state 94

    $default  reduce using rule 60 (Exp)


State 112

   59 Exp: Exp . ASSIGNOP Exp
   60    | Exp . AND Exp
   61    | Exp . OR Exp
   61    | Exp OR Exp .
   62    | Exp . RELOP Exp
   63    | Exp . PLUS Exp
   64    | Exp . MINUS Exp
   65    | Exp . STAR Exp
   66    | Exp . DIV Exp
   72    | Exp . LB Exp RB
   73    | Exp . DOT ID

    RELOP  shift, and go to state 86
    PLUS   shift, and go to state 87
    MINUS  shift, and go to state 88
    STAR   shift, and go to state 89
    DIV    shift, and go to state 90
    AND    shift, and go to state 91
    DOT    shift, and go to state 93
    LB     shift, and go to state 94

    $default  reduce using rule 61 (Exp)


State 113

   73 Exp: Exp DOT ID .

    $default  reduce using rule 73 (Exp)


State 114

   59 Exp: Exp . ASSIGNOP Exp
   60    | Exp . AND Exp
   61    | Exp . OR Exp
   62    | Exp . RELOP Exp
   63    | Exp . PLUS Exp
   64    | Exp . MINUS Exp
   65    | Exp . STAR Exp
   66    | Exp . DIV Exp
   72    | Exp . LB Exp RB
   72    | Exp LB Exp . RB
   73    | Exp . DOT ID

    ASSIGNOP  shift, and go to state 85
    RELOP     shift, and go to state 86
    PLUS      shift, and go to state 87
    MINUS     shift, and go to state 88
    STAR      shift, and go to state 89
    DIV       shift, and go to state 90
    AND       shift, and go to state 91
    OR        shift, and go to state 92
    DOT       shift, and go to state 93
    LB        shift, and go to state 94
    RB        shift, and go to state 119


State 115

   44 Stmt: IF LP Exp RP . Stmt
   45     | IF LP Exp RP . Stmt ELSE Stmt

    error   shift, and go to state 120
    MINUS   shift, and go to state 57
    NOT     shift, and go to state 58
    LP      shift, and go to state 59
    LC      shift, and go to state 29
    RETURN  shift, and go to state 60
    IF      shift, and go to state 61
    WHILE   shift, and go to state 62
    ID      shift, and go to state 63
    FLOAT   shift, and go to state 64
    INT     shift, and go to state 65

    CompSt  go to state 66
    Stmt    go to state 121
    Exp     go to state 69


State 116

   46 Stmt: WHILE LP Exp RP . Stmt

    error   shift, and go to state 120
    MINUS   shift, and go to state 57
    NOT     shift, and go to state 58
    LP      shift, and go to state 59
    LC      shift, and go to state 29
    RETURN  shift, and go to state 60
    IF      shift, and go to state 61
    WHILE   shift, and go to state 62
    ID      shift, and go to state 63
    FLOAT   shift, and go to state 64
    INT     shift, and go to state 65

    CompSt  go to state 66
    Stmt    go to state 122
    Exp     go to state 69


State 117

   78 Args: Exp COMMA . Args

    error  shift, and go to state 101
    MINUS  shift, and go to state 57
    NOT    shift, and go to state 58
    LP     shift, and go to state 59
    ID     shift, and go to state 63
    FLOAT  shift, and go to state 64
    INT    shift, and go to state 65

    Exp   go to state 103
    Args  go to state 123


State 118

   70 Exp: ID LP Args RP .

    $default  reduce using rule 70 (Exp)


State 119

   72 Exp: Exp LB Exp RB .

    $default  reduce using rule 72 (Exp)


State 120

   37 CompSt: error .
   47 Stmt: error .
   77 Exp: error .

    error     reduce using rule 37 (CompSt)
    error     [reduce using rule 47 (Stmt)]
    SEMI      reduce using rule 77 (Exp)
    ASSIGNOP  reduce using rule 77 (Exp)
    RELOP     reduce using rule 77 (Exp)
    PLUS      reduce using rule 77 (Exp)
    MINUS     reduce using rule 37 (CompSt)
    MINUS     [reduce using rule 47 (Stmt)]
    MINUS     [reduce using rule 77 (Exp)]
    STAR      reduce using rule 77 (Exp)
    DIV       reduce using rule 77 (Exp)
    AND       reduce using rule 77 (Exp)
    OR        reduce using rule 77 (Exp)
    DOT       reduce using rule 77 (Exp)
    NOT       reduce using rule 37 (CompSt)
    NOT       [reduce using rule 47 (Stmt)]
    LP        reduce using rule 37 (CompSt)
    LP        [reduce using rule 47 (Stmt)]
    LB        reduce using rule 77 (Exp)
    LC        reduce using rule 37 (CompSt)
    LC        [reduce using rule 47 (Stmt)]
    RC        reduce using rule 37 (CompSt)
    RC        [reduce using rule 47 (Stmt)]
    RETURN    reduce using rule 37 (CompSt)
    RETURN    [reduce using rule 47 (Stmt)]
    IF        reduce using rule 37 (CompSt)
    IF        [reduce using rule 47 (Stmt)]
    ELSE      reduce using rule 37 (CompSt)
    ELSE      [reduce using rule 47 (Stmt)]
    WHILE     reduce using rule 37 (CompSt)
    WHILE     [reduce using rule 47 (Stmt)]
    ID        reduce using rule 37 (CompSt)
    ID        [reduce using rule 47 (Stmt)]
    FLOAT     reduce using rule 37 (CompSt)
    FLOAT     [reduce using rule 47 (Stmt)]
    INT       reduce using rule 37 (CompSt)
    INT       [reduce using rule 47 (Stmt)]
    $default  reduce using rule 37 (CompSt)


State 121

   44 Stmt: IF LP Exp RP Stmt .
   45     | IF LP Exp RP Stmt . ELSE Stmt

    ELSE  shift, and go to state 124

    $default  reduce using rule 44 (Stmt)


State 122

   46 Stmt: WHILE LP Exp RP Stmt .

    $default  reduce using rule 46 (Stmt)


State 123

   78 Args: Exp COMMA Args .

    $default  reduce using rule 78 (Args)


State 124

   45 Stmt: IF LP Exp RP Stmt ELSE . Stmt

    error   shift, and go to state 120
    MINUS   shift, and go to state 57
    NOT     shift, and go to state 58
    LP      shift, and go to state 59
    LC      shift, and go to state 29
    RETURN  shift, and go to state 60
    IF      shift, and go to state 61
    WHILE   shift, and go to state 62
    ID      shift, and go to state 63
    FLOAT   shift, and go to state 64
    INT     shift, and go to state 65

    CompSt  go to state 66
    Stmt    go to state 125
    Exp     go to state 69


State 125

   45 Stmt: IF LP Exp RP Stmt ELSE Stmt .

    $default  reduce using rule 45 (Stmt)
