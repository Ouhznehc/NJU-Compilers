Rules useless in parser due to conflicts

   18 StructSpecifier: error

   38 StmtList: error

   45 Stmt: error

   53 DecList: error

   56 Dec: error

   78 Args: error


State 1 conflicts: 6 reduce/reduce
State 14 conflicts: 5 reduce/reduce
State 16 conflicts: 1 reduce/reduce
State 28 conflicts: 1 shift/reduce
State 30 conflicts: 16 reduce/reduce
State 33 conflicts: 1 shift/reduce
State 34 conflicts: 3 reduce/reduce
State 39 conflicts: 1 reduce/reduce
State 44 conflicts: 3 reduce/reduce
State 55 conflicts: 14 reduce/reduce
State 100 conflicts: 1 reduce/reduce
State 119 conflicts: 14 reduce/reduce


Grammar

    0 $accept: Program $end

    1 Program: ExtDefList
    2        | error

    3 ExtDefList: ExtDef ExtDefList
    4           | %empty
    5           | error

    6 ExtDef: Specifier ExtDecList SEMI
    7       | Specifier SEMI
    8       | Specifier FunDec CompSt
    9       | error

   10 ExtDecList: VarDec
   11           | VarDec COMMA ExtDecList
   12           | error

   13 Specifier: TYPE
   14          | StructSpecifier
   15          | error

   16 StructSpecifier: STRUCT OptTag LC DefList RC
   17                | STRUCT Tag
   18                | error

   19 OptTag: ID
   20       | %empty
   21       | error

   22 Tag: ID

   23 VarDec: ID
   24       | VarDec LB INT RB
   25       | error

   26 FunDec: ID LP VarList RP
   27       | ID LP RP
   28       | error

   29 VarList: ParamDec COMMA VarList
   30        | ParamDec
   31        | error

   32 ParamDec: Specifier VarDec
   33         | error

   34 CompSt: LC DefList StmtList RC
   35       | error

   36 StmtList: Stmt StmtList
   37         | %empty
   38         | error

   39 Stmt: Exp SEMI
   40     | CompSt
   41     | RETURN Exp SEMI
   42     | IF LP Exp RP Stmt
   43     | IF LP Exp RP Stmt ELSE Stmt
   44     | WHILE LP Exp RP Stmt
   45     | error

   46 DefList: Def DefList
   47        | %empty
   48        | error

   49 Def: Specifier DecList SEMI
   50    | error

   51 DecList: Dec
   52        | Dec COMMA DecList
   53        | error

   54 Dec: VarDec
   55    | VarDec ASSIGNOP Exp
   56    | error

   57 Exp: Exp ASSIGNOP Exp
   58    | Exp AND Exp
   59    | Exp OR Exp
   60    | Exp RELOP Exp
   61    | Exp PLUS Exp
   62    | Exp MINUS Exp
   63    | Exp STAR Exp
   64    | Exp DIV Exp
   65    | LP Exp RP
   66    | MINUS Exp
   67    | NOT Exp
   68    | ID LP Args RP
   69    | ID LP RP
   70    | Exp LB Exp RB
   71    | Exp DOT ID
   72    | ID
   73    | INT
   74    | FLOAT
   75    | error

   76 Args: Exp COMMA Args
   77     | Exp
   78     | error


Terminals, with rules where they appear

    $end (0) 0
    error (256) 2 5 9 12 15 18 21 25 28 31 33 35 38 45 48 50 53 56 75 78
    SEMI <syntax> (258) 6 7 39 41 49
    COMMA <syntax> (259) 11 29 52 76
    ASSIGNOP <syntax> (260) 55 57
    RELOP <syntax> (261) 60
    PLUS <syntax> (262) 61
    MINUS <syntax> (263) 62 66
    STAR <syntax> (264) 63
    DIV <syntax> (265) 64
    AND <syntax> (266) 58
    OR <syntax> (267) 59
    DOT <syntax> (268) 71
    NOT <syntax> (269) 67
    TYPE <syntax> (270) 13
    LP <syntax> (271) 26 27 42 43 44 65 68 69
    RP <syntax> (272) 26 27 42 43 44 65 68 69
    LB <syntax> (273) 24 70
    RB <syntax> (274) 24 70
    LC <syntax> (275) 16 34
    RC <syntax> (276) 16 34
    STRUCT <syntax> (277) 16 17
    RETURN <syntax> (278) 41
    IF <syntax> (279) 42 43
    ELSE <syntax> (280) 43
    WHILE <syntax> (281) 44
    ID <syntax> (282) 19 22 23 26 27 68 69 71 72
    FLOAT <syntax> (283) 74
    INT <syntax> (284) 24 73
    LOWER_THAN_ELSE (285)


Nonterminals, with rules where they appear

    $accept (31)
        on left: 0
    Program <syntax> (32)
        on left: 1 2
        on right: 0
    ExtDefList <syntax> (33)
        on left: 3 4 5
        on right: 1 3
    ExtDef <syntax> (34)
        on left: 6 7 8 9
        on right: 3
    ExtDecList <syntax> (35)
        on left: 10 11 12
        on right: 6 11
    Specifier <syntax> (36)
        on left: 13 14 15
        on right: 6 7 8 32 49
    StructSpecifier <syntax> (37)
        on left: 16 17 18
        on right: 14
    OptTag <syntax> (38)
        on left: 19 20 21
        on right: 16
    Tag <syntax> (39)
        on left: 22
        on right: 17
    VarDec <syntax> (40)
        on left: 23 24 25
        on right: 10 11 24 32 54 55
    FunDec <syntax> (41)
        on left: 26 27 28
        on right: 8
    VarList <syntax> (42)
        on left: 29 30 31
        on right: 26 29
    ParamDec <syntax> (43)
        on left: 32 33
        on right: 29 30
    CompSt <syntax> (44)
        on left: 34 35
        on right: 8 40
    StmtList <syntax> (45)
        on left: 36 37 38
        on right: 34 36
    Stmt <syntax> (46)
        on left: 39 40 41 42 43 44 45
        on right: 36 42 43 44
    DefList <syntax> (47)
        on left: 46 47 48
        on right: 16 34 46
    Def <syntax> (48)
        on left: 49 50
        on right: 46
    DecList <syntax> (49)
        on left: 51 52 53
        on right: 49 52
    Dec <syntax> (50)
        on left: 54 55 56
        on right: 51 52
    Exp <syntax> (51)
        on left: 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75
        on right: 39 41 42 43 44 55 57 58 59 60 61 62 63 64 65 66 67 70 71 76 77
    Args <syntax> (52)
        on left: 76 77 78
        on right: 68 76


State 0

    0 $accept: . Program $end

    error   shift, and go to state 1
    TYPE    shift, and go to state 2
    STRUCT  shift, and go to state 3

    $end  reduce using rule 4 (ExtDefList)

    Program          go to state 4
    ExtDefList       go to state 5
    ExtDef           go to state 6
    Specifier        go to state 7
    StructSpecifier  go to state 8


State 1

    2 Program: error .
    5 ExtDefList: error .
    9 ExtDef: error .
   15 Specifier: error .
   18 StructSpecifier: error .

    $end      reduce using rule 2 (Program)
    $end      [reduce using rule 5 (ExtDefList)]
    $end      [reduce using rule 9 (ExtDef)]
    error     reduce using rule 9 (ExtDef)
    error     [reduce using rule 15 (Specifier)]
    error     [reduce using rule 18 (StructSpecifier)]
    SEMI      reduce using rule 15 (Specifier)
    SEMI      [reduce using rule 18 (StructSpecifier)]
    ID        reduce using rule 15 (Specifier)
    ID        [reduce using rule 18 (StructSpecifier)]
    $default  reduce using rule 9 (ExtDef)


State 2

   13 Specifier: TYPE .

    $default  reduce using rule 13 (Specifier)


State 3

   16 StructSpecifier: STRUCT . OptTag LC DefList RC
   17                | STRUCT . Tag

    error  shift, and go to state 9
    ID     shift, and go to state 10

    LC  reduce using rule 20 (OptTag)

    OptTag  go to state 11
    Tag     go to state 12


State 4

    0 $accept: Program . $end

    $end  shift, and go to state 13


State 5

    1 Program: ExtDefList .

    $default  reduce using rule 1 (Program)


State 6

    3 ExtDefList: ExtDef . ExtDefList

    error   shift, and go to state 14
    TYPE    shift, and go to state 2
    STRUCT  shift, and go to state 3

    $end  reduce using rule 4 (ExtDefList)

    ExtDefList       go to state 15
    ExtDef           go to state 6
    Specifier        go to state 7
    StructSpecifier  go to state 8


State 7

    6 ExtDef: Specifier . ExtDecList SEMI
    7       | Specifier . SEMI
    8       | Specifier . FunDec CompSt

    error  shift, and go to state 16
    SEMI   shift, and go to state 17
    ID     shift, and go to state 18

    ExtDecList  go to state 19
    VarDec      go to state 20
    FunDec      go to state 21


State 8

   14 Specifier: StructSpecifier .

    $default  reduce using rule 14 (Specifier)


State 9

   21 OptTag: error .

    $default  reduce using rule 21 (OptTag)


State 10

   19 OptTag: ID .
   22 Tag: ID .

    LC        reduce using rule 19 (OptTag)
    $default  reduce using rule 22 (Tag)


State 11

   16 StructSpecifier: STRUCT OptTag . LC DefList RC

    LC  shift, and go to state 22


State 12

   17 StructSpecifier: STRUCT Tag .

    $default  reduce using rule 17 (StructSpecifier)


State 13

    0 $accept: Program $end .

    $default  accept


State 14

    5 ExtDefList: error .
    9 ExtDef: error .
   15 Specifier: error .
   18 StructSpecifier: error .

    $end      reduce using rule 5 (ExtDefList)
    $end      [reduce using rule 9 (ExtDef)]
    error     reduce using rule 9 (ExtDef)
    error     [reduce using rule 15 (Specifier)]
    error     [reduce using rule 18 (StructSpecifier)]
    SEMI      reduce using rule 15 (Specifier)
    SEMI      [reduce using rule 18 (StructSpecifier)]
    ID        reduce using rule 15 (Specifier)
    ID        [reduce using rule 18 (StructSpecifier)]
    $default  reduce using rule 9 (ExtDef)


State 15

    3 ExtDefList: ExtDef ExtDefList .

    $default  reduce using rule 3 (ExtDefList)


State 16

   12 ExtDecList: error .
   25 VarDec: error .
   28 FunDec: error .

    error     reduce using rule 28 (FunDec)
    SEMI      reduce using rule 12 (ExtDecList)
    SEMI      [reduce using rule 25 (VarDec)]
    LC        reduce using rule 28 (FunDec)
    $default  reduce using rule 25 (VarDec)


State 17

    7 ExtDef: Specifier SEMI .

    $default  reduce using rule 7 (ExtDef)


State 18

   23 VarDec: ID .
   26 FunDec: ID . LP VarList RP
   27       | ID . LP RP

    LP  shift, and go to state 23

    $default  reduce using rule 23 (VarDec)


State 19

    6 ExtDef: Specifier ExtDecList . SEMI

    SEMI  shift, and go to state 24


State 20

   10 ExtDecList: VarDec .
   11           | VarDec . COMMA ExtDecList
   24 VarDec: VarDec . LB INT RB

    COMMA  shift, and go to state 25
    LB     shift, and go to state 26

    $default  reduce using rule 10 (ExtDecList)


State 21

    8 ExtDef: Specifier FunDec . CompSt

    error  shift, and go to state 27
    LC     shift, and go to state 28

    CompSt  go to state 29


State 22

   16 StructSpecifier: STRUCT OptTag LC . DefList RC

    error   shift, and go to state 30
    TYPE    shift, and go to state 2
    STRUCT  shift, and go to state 3

    RC  reduce using rule 47 (DefList)

    Specifier        go to state 31
    StructSpecifier  go to state 8
    DefList          go to state 32
    Def              go to state 33


State 23

   26 FunDec: ID LP . VarList RP
   27       | ID LP . RP

    error   shift, and go to state 34
    TYPE    shift, and go to state 2
    RP      shift, and go to state 35
    STRUCT  shift, and go to state 3

    Specifier        go to state 36
    StructSpecifier  go to state 8
    VarList          go to state 37
    ParamDec         go to state 38


State 24

    6 ExtDef: Specifier ExtDecList SEMI .

    $default  reduce using rule 6 (ExtDef)


State 25

   11 ExtDecList: VarDec COMMA . ExtDecList

    error  shift, and go to state 39
    ID     shift, and go to state 40

    ExtDecList  go to state 41
    VarDec      go to state 20


State 26

   24 VarDec: VarDec LB . INT RB

    INT  shift, and go to state 42


State 27

   35 CompSt: error .

    $default  reduce using rule 35 (CompSt)


State 28

   34 CompSt: LC . DefList StmtList RC

    error   shift, and go to state 30
    TYPE    shift, and go to state 2
    STRUCT  shift, and go to state 3

    error   [reduce using rule 47 (DefList)]
    MINUS   reduce using rule 47 (DefList)
    NOT     reduce using rule 47 (DefList)
    LP      reduce using rule 47 (DefList)
    LC      reduce using rule 47 (DefList)
    RC      reduce using rule 47 (DefList)
    RETURN  reduce using rule 47 (DefList)
    IF      reduce using rule 47 (DefList)
    WHILE   reduce using rule 47 (DefList)
    ID      reduce using rule 47 (DefList)
    FLOAT   reduce using rule 47 (DefList)
    INT     reduce using rule 47 (DefList)

    Specifier        go to state 31
    StructSpecifier  go to state 8
    DefList          go to state 43
    Def              go to state 33


State 29

    8 ExtDef: Specifier FunDec CompSt .

    $default  reduce using rule 8 (ExtDef)


State 30

   15 Specifier: error .
   18 StructSpecifier: error .
   48 DefList: error .
   50 Def: error .

    error     reduce using rule 15 (Specifier)
    error     [reduce using rule 18 (StructSpecifier)]
    error     [reduce using rule 48 (DefList)]
    error     [reduce using rule 50 (Def)]
    MINUS     reduce using rule 48 (DefList)
    MINUS     [reduce using rule 50 (Def)]
    NOT       reduce using rule 48 (DefList)
    NOT       [reduce using rule 50 (Def)]
    TYPE      reduce using rule 50 (Def)
    LP        reduce using rule 48 (DefList)
    LP        [reduce using rule 50 (Def)]
    LC        reduce using rule 48 (DefList)
    LC        [reduce using rule 50 (Def)]
    RC        reduce using rule 48 (DefList)
    RC        [reduce using rule 50 (Def)]
    STRUCT    reduce using rule 50 (Def)
    RETURN    reduce using rule 48 (DefList)
    RETURN    [reduce using rule 50 (Def)]
    IF        reduce using rule 48 (DefList)
    IF        [reduce using rule 50 (Def)]
    WHILE     reduce using rule 48 (DefList)
    WHILE     [reduce using rule 50 (Def)]
    ID        reduce using rule 15 (Specifier)
    ID        [reduce using rule 18 (StructSpecifier)]
    ID        [reduce using rule 48 (DefList)]
    ID        [reduce using rule 50 (Def)]
    FLOAT     reduce using rule 48 (DefList)
    FLOAT     [reduce using rule 50 (Def)]
    INT       reduce using rule 48 (DefList)
    INT       [reduce using rule 50 (Def)]
    $default  reduce using rule 48 (DefList)


State 31

   49 Def: Specifier . DecList SEMI

    error  shift, and go to state 44
    ID     shift, and go to state 40

    VarDec   go to state 45
    DecList  go to state 46
    Dec      go to state 47


State 32

   16 StructSpecifier: STRUCT OptTag LC DefList . RC

    RC  shift, and go to state 48


State 33

   46 DefList: Def . DefList

    error   shift, and go to state 30
    TYPE    shift, and go to state 2
    STRUCT  shift, and go to state 3

    error   [reduce using rule 47 (DefList)]
    MINUS   reduce using rule 47 (DefList)
    NOT     reduce using rule 47 (DefList)
    LP      reduce using rule 47 (DefList)
    LC      reduce using rule 47 (DefList)
    RC      reduce using rule 47 (DefList)
    RETURN  reduce using rule 47 (DefList)
    IF      reduce using rule 47 (DefList)
    WHILE   reduce using rule 47 (DefList)
    ID      reduce using rule 47 (DefList)
    FLOAT   reduce using rule 47 (DefList)
    INT     reduce using rule 47 (DefList)

    Specifier        go to state 31
    StructSpecifier  go to state 8
    DefList          go to state 49
    Def              go to state 33


State 34

   15 Specifier: error .
   18 StructSpecifier: error .
   31 VarList: error .
   33 ParamDec: error .

    error     reduce using rule 15 (Specifier)
    error     [reduce using rule 18 (StructSpecifier)]
    COMMA     reduce using rule 33 (ParamDec)
    RP        reduce using rule 31 (VarList)
    RP        [reduce using rule 33 (ParamDec)]
    ID        reduce using rule 15 (Specifier)
    ID        [reduce using rule 18 (StructSpecifier)]
    $default  reduce using rule 15 (Specifier)


State 35

   27 FunDec: ID LP RP .

    $default  reduce using rule 27 (FunDec)


State 36

   32 ParamDec: Specifier . VarDec

    error  shift, and go to state 50
    ID     shift, and go to state 40

    VarDec  go to state 51


State 37

   26 FunDec: ID LP VarList . RP

    RP  shift, and go to state 52


State 38

   29 VarList: ParamDec . COMMA VarList
   30        | ParamDec .

    COMMA  shift, and go to state 53

    $default  reduce using rule 30 (VarList)


State 39

   12 ExtDecList: error .
   25 VarDec: error .

    SEMI      reduce using rule 12 (ExtDecList)
    SEMI      [reduce using rule 25 (VarDec)]
    $default  reduce using rule 25 (VarDec)


State 40

   23 VarDec: ID .

    $default  reduce using rule 23 (VarDec)


State 41

   11 ExtDecList: VarDec COMMA ExtDecList .

    $default  reduce using rule 11 (ExtDecList)


State 42

   24 VarDec: VarDec LB INT . RB

    RB  shift, and go to state 54


State 43

   34 CompSt: LC DefList . StmtList RC

    error   shift, and go to state 55
    MINUS   shift, and go to state 56
    NOT     shift, and go to state 57
    LP      shift, and go to state 58
    LC      shift, and go to state 28
    RETURN  shift, and go to state 59
    IF      shift, and go to state 60
    WHILE   shift, and go to state 61
    ID      shift, and go to state 62
    FLOAT   shift, and go to state 63
    INT     shift, and go to state 64

    RC  reduce using rule 37 (StmtList)

    CompSt    go to state 65
    StmtList  go to state 66
    Stmt      go to state 67
    Exp       go to state 68


State 44

   25 VarDec: error .
   53 DecList: error .
   56 Dec: error .

    SEMI      reduce using rule 25 (VarDec)
    SEMI      [reduce using rule 53 (DecList)]
    SEMI      [reduce using rule 56 (Dec)]
    COMMA     reduce using rule 25 (VarDec)
    COMMA     [reduce using rule 56 (Dec)]
    $default  reduce using rule 25 (VarDec)


State 45

   24 VarDec: VarDec . LB INT RB
   54 Dec: VarDec .
   55    | VarDec . ASSIGNOP Exp

    ASSIGNOP  shift, and go to state 69
    LB        shift, and go to state 26

    $default  reduce using rule 54 (Dec)


State 46

   49 Def: Specifier DecList . SEMI

    SEMI  shift, and go to state 70


State 47

   51 DecList: Dec .
   52        | Dec . COMMA DecList

    COMMA  shift, and go to state 71

    $default  reduce using rule 51 (DecList)


State 48

   16 StructSpecifier: STRUCT OptTag LC DefList RC .

    $default  reduce using rule 16 (StructSpecifier)


State 49

   46 DefList: Def DefList .

    $default  reduce using rule 46 (DefList)


State 50

   25 VarDec: error .

    $default  reduce using rule 25 (VarDec)


State 51

   24 VarDec: VarDec . LB INT RB
   32 ParamDec: Specifier VarDec .

    LB  shift, and go to state 26

    $default  reduce using rule 32 (ParamDec)


State 52

   26 FunDec: ID LP VarList RP .

    $default  reduce using rule 26 (FunDec)


State 53

   29 VarList: ParamDec COMMA . VarList

    error   shift, and go to state 34
    TYPE    shift, and go to state 2
    STRUCT  shift, and go to state 3

    Specifier        go to state 36
    StructSpecifier  go to state 8
    VarList          go to state 72
    ParamDec         go to state 38


State 54

   24 VarDec: VarDec LB INT RB .

    $default  reduce using rule 24 (VarDec)


State 55

   35 CompSt: error .
   38 StmtList: error .
   45 Stmt: error .
   75 Exp: error .

    error     reduce using rule 35 (CompSt)
    error     [reduce using rule 45 (Stmt)]
    SEMI      reduce using rule 75 (Exp)
    ASSIGNOP  reduce using rule 75 (Exp)
    RELOP     reduce using rule 75 (Exp)
    PLUS      reduce using rule 75 (Exp)
    MINUS     reduce using rule 35 (CompSt)
    MINUS     [reduce using rule 45 (Stmt)]
    MINUS     [reduce using rule 75 (Exp)]
    STAR      reduce using rule 75 (Exp)
    DIV       reduce using rule 75 (Exp)
    AND       reduce using rule 75 (Exp)
    OR        reduce using rule 75 (Exp)
    DOT       reduce using rule 75 (Exp)
    NOT       reduce using rule 35 (CompSt)
    NOT       [reduce using rule 45 (Stmt)]
    LP        reduce using rule 35 (CompSt)
    LP        [reduce using rule 45 (Stmt)]
    LB        reduce using rule 75 (Exp)
    LC        reduce using rule 35 (CompSt)
    LC        [reduce using rule 45 (Stmt)]
    RC        reduce using rule 35 (CompSt)
    RC        [reduce using rule 38 (StmtList)]
    RC        [reduce using rule 45 (Stmt)]
    RETURN    reduce using rule 35 (CompSt)
    RETURN    [reduce using rule 45 (Stmt)]
    IF        reduce using rule 35 (CompSt)
    IF        [reduce using rule 45 (Stmt)]
    WHILE     reduce using rule 35 (CompSt)
    WHILE     [reduce using rule 45 (Stmt)]
    ID        reduce using rule 35 (CompSt)
    ID        [reduce using rule 45 (Stmt)]
    FLOAT     reduce using rule 35 (CompSt)
    FLOAT     [reduce using rule 45 (Stmt)]
    INT       reduce using rule 35 (CompSt)
    INT       [reduce using rule 45 (Stmt)]
    $default  reduce using rule 35 (CompSt)


State 56

   66 Exp: MINUS . Exp

    error  shift, and go to state 73
    MINUS  shift, and go to state 56
    NOT    shift, and go to state 57
    LP     shift, and go to state 58
    ID     shift, and go to state 62
    FLOAT  shift, and go to state 63
    INT    shift, and go to state 64

    Exp  go to state 74


State 57

   67 Exp: NOT . Exp

    error  shift, and go to state 73
    MINUS  shift, and go to state 56
    NOT    shift, and go to state 57
    LP     shift, and go to state 58
    ID     shift, and go to state 62
    FLOAT  shift, and go to state 63
    INT    shift, and go to state 64

    Exp  go to state 75


State 58

   65 Exp: LP . Exp RP

    error  shift, and go to state 73
    MINUS  shift, and go to state 56
    NOT    shift, and go to state 57
    LP     shift, and go to state 58
    ID     shift, and go to state 62
    FLOAT  shift, and go to state 63
    INT    shift, and go to state 64

    Exp  go to state 76


State 59

   41 Stmt: RETURN . Exp SEMI

    error  shift, and go to state 73
    MINUS  shift, and go to state 56
    NOT    shift, and go to state 57
    LP     shift, and go to state 58
    ID     shift, and go to state 62
    FLOAT  shift, and go to state 63
    INT    shift, and go to state 64

    Exp  go to state 77


State 60

   42 Stmt: IF . LP Exp RP Stmt
   43     | IF . LP Exp RP Stmt ELSE Stmt

    LP  shift, and go to state 78


State 61

   44 Stmt: WHILE . LP Exp RP Stmt

    LP  shift, and go to state 79


State 62

   68 Exp: ID . LP Args RP
   69    | ID . LP RP
   72    | ID .

    LP  shift, and go to state 80

    $default  reduce using rule 72 (Exp)


State 63

   74 Exp: FLOAT .

    $default  reduce using rule 74 (Exp)


State 64

   73 Exp: INT .

    $default  reduce using rule 73 (Exp)


State 65

   40 Stmt: CompSt .

    $default  reduce using rule 40 (Stmt)


State 66

   34 CompSt: LC DefList StmtList . RC

    RC  shift, and go to state 81


State 67

   36 StmtList: Stmt . StmtList

    error   shift, and go to state 55
    MINUS   shift, and go to state 56
    NOT     shift, and go to state 57
    LP      shift, and go to state 58
    LC      shift, and go to state 28
    RETURN  shift, and go to state 59
    IF      shift, and go to state 60
    WHILE   shift, and go to state 61
    ID      shift, and go to state 62
    FLOAT   shift, and go to state 63
    INT     shift, and go to state 64

    RC  reduce using rule 37 (StmtList)

    CompSt    go to state 65
    StmtList  go to state 82
    Stmt      go to state 67
    Exp       go to state 68


State 68

   39 Stmt: Exp . SEMI
   57 Exp: Exp . ASSIGNOP Exp
   58    | Exp . AND Exp
   59    | Exp . OR Exp
   60    | Exp . RELOP Exp
   61    | Exp . PLUS Exp
   62    | Exp . MINUS Exp
   63    | Exp . STAR Exp
   64    | Exp . DIV Exp
   70    | Exp . LB Exp RB
   71    | Exp . DOT ID

    SEMI      shift, and go to state 83
    ASSIGNOP  shift, and go to state 84
    RELOP     shift, and go to state 85
    PLUS      shift, and go to state 86
    MINUS     shift, and go to state 87
    STAR      shift, and go to state 88
    DIV       shift, and go to state 89
    AND       shift, and go to state 90
    OR        shift, and go to state 91
    DOT       shift, and go to state 92
    LB        shift, and go to state 93


State 69

   55 Dec: VarDec ASSIGNOP . Exp

    error  shift, and go to state 73
    MINUS  shift, and go to state 56
    NOT    shift, and go to state 57
    LP     shift, and go to state 58
    ID     shift, and go to state 62
    FLOAT  shift, and go to state 63
    INT    shift, and go to state 64

    Exp  go to state 94


State 70

   49 Def: Specifier DecList SEMI .

    $default  reduce using rule 49 (Def)


State 71

   52 DecList: Dec COMMA . DecList

    error  shift, and go to state 44
    ID     shift, and go to state 40

    VarDec   go to state 45
    DecList  go to state 95
    Dec      go to state 47


State 72

   29 VarList: ParamDec COMMA VarList .

    $default  reduce using rule 29 (VarList)


State 73

   75 Exp: error .

    $default  reduce using rule 75 (Exp)


State 74

   57 Exp: Exp . ASSIGNOP Exp
   58    | Exp . AND Exp
   59    | Exp . OR Exp
   60    | Exp . RELOP Exp
   61    | Exp . PLUS Exp
   62    | Exp . MINUS Exp
   63    | Exp . STAR Exp
   64    | Exp . DIV Exp
   66    | MINUS Exp .
   70    | Exp . LB Exp RB
   71    | Exp . DOT ID

    DOT  shift, and go to state 92
    LB   shift, and go to state 93

    $default  reduce using rule 66 (Exp)


State 75

   57 Exp: Exp . ASSIGNOP Exp
   58    | Exp . AND Exp
   59    | Exp . OR Exp
   60    | Exp . RELOP Exp
   61    | Exp . PLUS Exp
   62    | Exp . MINUS Exp
   63    | Exp . STAR Exp
   64    | Exp . DIV Exp
   67    | NOT Exp .
   70    | Exp . LB Exp RB
   71    | Exp . DOT ID

    DOT  shift, and go to state 92
    LB   shift, and go to state 93

    $default  reduce using rule 67 (Exp)


State 76

   57 Exp: Exp . ASSIGNOP Exp
   58    | Exp . AND Exp
   59    | Exp . OR Exp
   60    | Exp . RELOP Exp
   61    | Exp . PLUS Exp
   62    | Exp . MINUS Exp
   63    | Exp . STAR Exp
   64    | Exp . DIV Exp
   65    | LP Exp . RP
   70    | Exp . LB Exp RB
   71    | Exp . DOT ID

    ASSIGNOP  shift, and go to state 84
    RELOP     shift, and go to state 85
    PLUS      shift, and go to state 86
    MINUS     shift, and go to state 87
    STAR      shift, and go to state 88
    DIV       shift, and go to state 89
    AND       shift, and go to state 90
    OR        shift, and go to state 91
    DOT       shift, and go to state 92
    RP        shift, and go to state 96
    LB        shift, and go to state 93


State 77

   41 Stmt: RETURN Exp . SEMI
   57 Exp: Exp . ASSIGNOP Exp
   58    | Exp . AND Exp
   59    | Exp . OR Exp
   60    | Exp . RELOP Exp
   61    | Exp . PLUS Exp
   62    | Exp . MINUS Exp
   63    | Exp . STAR Exp
   64    | Exp . DIV Exp
   70    | Exp . LB Exp RB
   71    | Exp . DOT ID

    SEMI      shift, and go to state 97
    ASSIGNOP  shift, and go to state 84
    RELOP     shift, and go to state 85
    PLUS      shift, and go to state 86
    MINUS     shift, and go to state 87
    STAR      shift, and go to state 88
    DIV       shift, and go to state 89
    AND       shift, and go to state 90
    OR        shift, and go to state 91
    DOT       shift, and go to state 92
    LB        shift, and go to state 93


State 78

   42 Stmt: IF LP . Exp RP Stmt
   43     | IF LP . Exp RP Stmt ELSE Stmt

    error  shift, and go to state 73
    MINUS  shift, and go to state 56
    NOT    shift, and go to state 57
    LP     shift, and go to state 58
    ID     shift, and go to state 62
    FLOAT  shift, and go to state 63
    INT    shift, and go to state 64

    Exp  go to state 98


State 79

   44 Stmt: WHILE LP . Exp RP Stmt

    error  shift, and go to state 73
    MINUS  shift, and go to state 56
    NOT    shift, and go to state 57
    LP     shift, and go to state 58
    ID     shift, and go to state 62
    FLOAT  shift, and go to state 63
    INT    shift, and go to state 64

    Exp  go to state 99


State 80

   68 Exp: ID LP . Args RP
   69    | ID LP . RP

    error  shift, and go to state 100
    MINUS  shift, and go to state 56
    NOT    shift, and go to state 57
    LP     shift, and go to state 58
    RP     shift, and go to state 101
    ID     shift, and go to state 62
    FLOAT  shift, and go to state 63
    INT    shift, and go to state 64

    Exp   go to state 102
    Args  go to state 103


State 81

   34 CompSt: LC DefList StmtList RC .

    $default  reduce using rule 34 (CompSt)


State 82

   36 StmtList: Stmt StmtList .

    $default  reduce using rule 36 (StmtList)


State 83

   39 Stmt: Exp SEMI .

    $default  reduce using rule 39 (Stmt)


State 84

   57 Exp: Exp ASSIGNOP . Exp

    error  shift, and go to state 73
    MINUS  shift, and go to state 56
    NOT    shift, and go to state 57
    LP     shift, and go to state 58
    ID     shift, and go to state 62
    FLOAT  shift, and go to state 63
    INT    shift, and go to state 64

    Exp  go to state 104


State 85

   60 Exp: Exp RELOP . Exp

    error  shift, and go to state 73
    MINUS  shift, and go to state 56
    NOT    shift, and go to state 57
    LP     shift, and go to state 58
    ID     shift, and go to state 62
    FLOAT  shift, and go to state 63
    INT    shift, and go to state 64

    Exp  go to state 105


State 86

   61 Exp: Exp PLUS . Exp

    error  shift, and go to state 73
    MINUS  shift, and go to state 56
    NOT    shift, and go to state 57
    LP     shift, and go to state 58
    ID     shift, and go to state 62
    FLOAT  shift, and go to state 63
    INT    shift, and go to state 64

    Exp  go to state 106


State 87

   62 Exp: Exp MINUS . Exp

    error  shift, and go to state 73
    MINUS  shift, and go to state 56
    NOT    shift, and go to state 57
    LP     shift, and go to state 58
    ID     shift, and go to state 62
    FLOAT  shift, and go to state 63
    INT    shift, and go to state 64

    Exp  go to state 107


State 88

   63 Exp: Exp STAR . Exp

    error  shift, and go to state 73
    MINUS  shift, and go to state 56
    NOT    shift, and go to state 57
    LP     shift, and go to state 58
    ID     shift, and go to state 62
    FLOAT  shift, and go to state 63
    INT    shift, and go to state 64

    Exp  go to state 108


State 89

   64 Exp: Exp DIV . Exp

    error  shift, and go to state 73
    MINUS  shift, and go to state 56
    NOT    shift, and go to state 57
    LP     shift, and go to state 58
    ID     shift, and go to state 62
    FLOAT  shift, and go to state 63
    INT    shift, and go to state 64

    Exp  go to state 109


State 90

   58 Exp: Exp AND . Exp

    error  shift, and go to state 73
    MINUS  shift, and go to state 56
    NOT    shift, and go to state 57
    LP     shift, and go to state 58
    ID     shift, and go to state 62
    FLOAT  shift, and go to state 63
    INT    shift, and go to state 64

    Exp  go to state 110


State 91

   59 Exp: Exp OR . Exp

    error  shift, and go to state 73
    MINUS  shift, and go to state 56
    NOT    shift, and go to state 57
    LP     shift, and go to state 58
    ID     shift, and go to state 62
    FLOAT  shift, and go to state 63
    INT    shift, and go to state 64

    Exp  go to state 111


State 92

   71 Exp: Exp DOT . ID

    ID  shift, and go to state 112


State 93

   70 Exp: Exp LB . Exp RB

    error  shift, and go to state 73
    MINUS  shift, and go to state 56
    NOT    shift, and go to state 57
    LP     shift, and go to state 58
    ID     shift, and go to state 62
    FLOAT  shift, and go to state 63
    INT    shift, and go to state 64

    Exp  go to state 113


State 94

   55 Dec: VarDec ASSIGNOP Exp .
   57 Exp: Exp . ASSIGNOP Exp
   58    | Exp . AND Exp
   59    | Exp . OR Exp
   60    | Exp . RELOP Exp
   61    | Exp . PLUS Exp
   62    | Exp . MINUS Exp
   63    | Exp . STAR Exp
   64    | Exp . DIV Exp
   70    | Exp . LB Exp RB
   71    | Exp . DOT ID

    ASSIGNOP  shift, and go to state 84
    RELOP     shift, and go to state 85
    PLUS      shift, and go to state 86
    MINUS     shift, and go to state 87
    STAR      shift, and go to state 88
    DIV       shift, and go to state 89
    AND       shift, and go to state 90
    OR        shift, and go to state 91
    DOT       shift, and go to state 92
    LB        shift, and go to state 93

    $default  reduce using rule 55 (Dec)


State 95

   52 DecList: Dec COMMA DecList .

    $default  reduce using rule 52 (DecList)


State 96

   65 Exp: LP Exp RP .

    $default  reduce using rule 65 (Exp)


State 97

   41 Stmt: RETURN Exp SEMI .

    $default  reduce using rule 41 (Stmt)


State 98

   42 Stmt: IF LP Exp . RP Stmt
   43     | IF LP Exp . RP Stmt ELSE Stmt
   57 Exp: Exp . ASSIGNOP Exp
   58    | Exp . AND Exp
   59    | Exp . OR Exp
   60    | Exp . RELOP Exp
   61    | Exp . PLUS Exp
   62    | Exp . MINUS Exp
   63    | Exp . STAR Exp
   64    | Exp . DIV Exp
   70    | Exp . LB Exp RB
   71    | Exp . DOT ID

    ASSIGNOP  shift, and go to state 84
    RELOP     shift, and go to state 85
    PLUS      shift, and go to state 86
    MINUS     shift, and go to state 87
    STAR      shift, and go to state 88
    DIV       shift, and go to state 89
    AND       shift, and go to state 90
    OR        shift, and go to state 91
    DOT       shift, and go to state 92
    RP        shift, and go to state 114
    LB        shift, and go to state 93


State 99

   44 Stmt: WHILE LP Exp . RP Stmt
   57 Exp: Exp . ASSIGNOP Exp
   58    | Exp . AND Exp
   59    | Exp . OR Exp
   60    | Exp . RELOP Exp
   61    | Exp . PLUS Exp
   62    | Exp . MINUS Exp
   63    | Exp . STAR Exp
   64    | Exp . DIV Exp
   70    | Exp . LB Exp RB
   71    | Exp . DOT ID

    ASSIGNOP  shift, and go to state 84
    RELOP     shift, and go to state 85
    PLUS      shift, and go to state 86
    MINUS     shift, and go to state 87
    STAR      shift, and go to state 88
    DIV       shift, and go to state 89
    AND       shift, and go to state 90
    OR        shift, and go to state 91
    DOT       shift, and go to state 92
    RP        shift, and go to state 115
    LB        shift, and go to state 93


State 100

   75 Exp: error .
   78 Args: error .

    RP        reduce using rule 75 (Exp)
    RP        [reduce using rule 78 (Args)]
    $default  reduce using rule 75 (Exp)


State 101

   69 Exp: ID LP RP .

    $default  reduce using rule 69 (Exp)


State 102

   57 Exp: Exp . ASSIGNOP Exp
   58    | Exp . AND Exp
   59    | Exp . OR Exp
   60    | Exp . RELOP Exp
   61    | Exp . PLUS Exp
   62    | Exp . MINUS Exp
   63    | Exp . STAR Exp
   64    | Exp . DIV Exp
   70    | Exp . LB Exp RB
   71    | Exp . DOT ID
   76 Args: Exp . COMMA Args
   77     | Exp .

    COMMA     shift, and go to state 116
    ASSIGNOP  shift, and go to state 84
    RELOP     shift, and go to state 85
    PLUS      shift, and go to state 86
    MINUS     shift, and go to state 87
    STAR      shift, and go to state 88
    DIV       shift, and go to state 89
    AND       shift, and go to state 90
    OR        shift, and go to state 91
    DOT       shift, and go to state 92
    LB        shift, and go to state 93

    $default  reduce using rule 77 (Args)


State 103

   68 Exp: ID LP Args . RP

    RP  shift, and go to state 117


State 104

   57 Exp: Exp . ASSIGNOP Exp
   57    | Exp ASSIGNOP Exp .
   58    | Exp . AND Exp
   59    | Exp . OR Exp
   60    | Exp . RELOP Exp
   61    | Exp . PLUS Exp
   62    | Exp . MINUS Exp
   63    | Exp . STAR Exp
   64    | Exp . DIV Exp
   70    | Exp . LB Exp RB
   71    | Exp . DOT ID

    ASSIGNOP  shift, and go to state 84
    RELOP     shift, and go to state 85
    PLUS      shift, and go to state 86
    MINUS     shift, and go to state 87
    STAR      shift, and go to state 88
    DIV       shift, and go to state 89
    AND       shift, and go to state 90
    OR        shift, and go to state 91
    DOT       shift, and go to state 92
    LB        shift, and go to state 93

    $default  reduce using rule 57 (Exp)


State 105

   57 Exp: Exp . ASSIGNOP Exp
   58    | Exp . AND Exp
   59    | Exp . OR Exp
   60    | Exp . RELOP Exp
   60    | Exp RELOP Exp .
   61    | Exp . PLUS Exp
   62    | Exp . MINUS Exp
   63    | Exp . STAR Exp
   64    | Exp . DIV Exp
   70    | Exp . LB Exp RB
   71    | Exp . DOT ID

    PLUS   shift, and go to state 86
    MINUS  shift, and go to state 87
    STAR   shift, and go to state 88
    DIV    shift, and go to state 89
    DOT    shift, and go to state 92
    LB     shift, and go to state 93

    $default  reduce using rule 60 (Exp)


State 106

   57 Exp: Exp . ASSIGNOP Exp
   58    | Exp . AND Exp
   59    | Exp . OR Exp
   60    | Exp . RELOP Exp
   61    | Exp . PLUS Exp
   61    | Exp PLUS Exp .
   62    | Exp . MINUS Exp
   63    | Exp . STAR Exp
   64    | Exp . DIV Exp
   70    | Exp . LB Exp RB
   71    | Exp . DOT ID

    STAR  shift, and go to state 88
    DIV   shift, and go to state 89
    DOT   shift, and go to state 92
    LB    shift, and go to state 93

    $default  reduce using rule 61 (Exp)


State 107

   57 Exp: Exp . ASSIGNOP Exp
   58    | Exp . AND Exp
   59    | Exp . OR Exp
   60    | Exp . RELOP Exp
   61    | Exp . PLUS Exp
   62    | Exp . MINUS Exp
   62    | Exp MINUS Exp .
   63    | Exp . STAR Exp
   64    | Exp . DIV Exp
   70    | Exp . LB Exp RB
   71    | Exp . DOT ID

    STAR  shift, and go to state 88
    DIV   shift, and go to state 89
    DOT   shift, and go to state 92
    LB    shift, and go to state 93

    $default  reduce using rule 62 (Exp)


State 108

   57 Exp: Exp . ASSIGNOP Exp
   58    | Exp . AND Exp
   59    | Exp . OR Exp
   60    | Exp . RELOP Exp
   61    | Exp . PLUS Exp
   62    | Exp . MINUS Exp
   63    | Exp . STAR Exp
   63    | Exp STAR Exp .
   64    | Exp . DIV Exp
   70    | Exp . LB Exp RB
   71    | Exp . DOT ID

    DOT  shift, and go to state 92
    LB   shift, and go to state 93

    $default  reduce using rule 63 (Exp)


State 109

   57 Exp: Exp . ASSIGNOP Exp
   58    | Exp . AND Exp
   59    | Exp . OR Exp
   60    | Exp . RELOP Exp
   61    | Exp . PLUS Exp
   62    | Exp . MINUS Exp
   63    | Exp . STAR Exp
   64    | Exp . DIV Exp
   64    | Exp DIV Exp .
   70    | Exp . LB Exp RB
   71    | Exp . DOT ID

    DOT  shift, and go to state 92
    LB   shift, and go to state 93

    $default  reduce using rule 64 (Exp)


State 110

   57 Exp: Exp . ASSIGNOP Exp
   58    | Exp . AND Exp
   58    | Exp AND Exp .
   59    | Exp . OR Exp
   60    | Exp . RELOP Exp
   61    | Exp . PLUS Exp
   62    | Exp . MINUS Exp
   63    | Exp . STAR Exp
   64    | Exp . DIV Exp
   70    | Exp . LB Exp RB
   71    | Exp . DOT ID

    RELOP  shift, and go to state 85
    PLUS   shift, and go to state 86
    MINUS  shift, and go to state 87
    STAR   shift, and go to state 88
    DIV    shift, and go to state 89
    DOT    shift, and go to state 92
    LB     shift, and go to state 93

    $default  reduce using rule 58 (Exp)


State 111

   57 Exp: Exp . ASSIGNOP Exp
   58    | Exp . AND Exp
   59    | Exp . OR Exp
   59    | Exp OR Exp .
   60    | Exp . RELOP Exp
   61    | Exp . PLUS Exp
   62    | Exp . MINUS Exp
   63    | Exp . STAR Exp
   64    | Exp . DIV Exp
   70    | Exp . LB Exp RB
   71    | Exp . DOT ID

    RELOP  shift, and go to state 85
    PLUS   shift, and go to state 86
    MINUS  shift, and go to state 87
    STAR   shift, and go to state 88
    DIV    shift, and go to state 89
    AND    shift, and go to state 90
    DOT    shift, and go to state 92
    LB     shift, and go to state 93

    $default  reduce using rule 59 (Exp)


State 112

   71 Exp: Exp DOT ID .

    $default  reduce using rule 71 (Exp)


State 113

   57 Exp: Exp . ASSIGNOP Exp
   58    | Exp . AND Exp
   59    | Exp . OR Exp
   60    | Exp . RELOP Exp
   61    | Exp . PLUS Exp
   62    | Exp . MINUS Exp
   63    | Exp . STAR Exp
   64    | Exp . DIV Exp
   70    | Exp . LB Exp RB
   70    | Exp LB Exp . RB
   71    | Exp . DOT ID

    ASSIGNOP  shift, and go to state 84
    RELOP     shift, and go to state 85
    PLUS      shift, and go to state 86
    MINUS     shift, and go to state 87
    STAR      shift, and go to state 88
    DIV       shift, and go to state 89
    AND       shift, and go to state 90
    OR        shift, and go to state 91
    DOT       shift, and go to state 92
    LB        shift, and go to state 93
    RB        shift, and go to state 118


State 114

   42 Stmt: IF LP Exp RP . Stmt
   43     | IF LP Exp RP . Stmt ELSE Stmt

    error   shift, and go to state 119
    MINUS   shift, and go to state 56
    NOT     shift, and go to state 57
    LP      shift, and go to state 58
    LC      shift, and go to state 28
    RETURN  shift, and go to state 59
    IF      shift, and go to state 60
    WHILE   shift, and go to state 61
    ID      shift, and go to state 62
    FLOAT   shift, and go to state 63
    INT     shift, and go to state 64

    CompSt  go to state 65
    Stmt    go to state 120
    Exp     go to state 68


State 115

   44 Stmt: WHILE LP Exp RP . Stmt

    error   shift, and go to state 119
    MINUS   shift, and go to state 56
    NOT     shift, and go to state 57
    LP      shift, and go to state 58
    LC      shift, and go to state 28
    RETURN  shift, and go to state 59
    IF      shift, and go to state 60
    WHILE   shift, and go to state 61
    ID      shift, and go to state 62
    FLOAT   shift, and go to state 63
    INT     shift, and go to state 64

    CompSt  go to state 65
    Stmt    go to state 121
    Exp     go to state 68


State 116

   76 Args: Exp COMMA . Args

    error  shift, and go to state 100
    MINUS  shift, and go to state 56
    NOT    shift, and go to state 57
    LP     shift, and go to state 58
    ID     shift, and go to state 62
    FLOAT  shift, and go to state 63
    INT    shift, and go to state 64

    Exp   go to state 102
    Args  go to state 122


State 117

   68 Exp: ID LP Args RP .

    $default  reduce using rule 68 (Exp)


State 118

   70 Exp: Exp LB Exp RB .

    $default  reduce using rule 70 (Exp)


State 119

   35 CompSt: error .
   45 Stmt: error .
   75 Exp: error .

    error     reduce using rule 35 (CompSt)
    error     [reduce using rule 45 (Stmt)]
    SEMI      reduce using rule 75 (Exp)
    ASSIGNOP  reduce using rule 75 (Exp)
    RELOP     reduce using rule 75 (Exp)
    PLUS      reduce using rule 75 (Exp)
    MINUS     reduce using rule 35 (CompSt)
    MINUS     [reduce using rule 45 (Stmt)]
    MINUS     [reduce using rule 75 (Exp)]
    STAR      reduce using rule 75 (Exp)
    DIV       reduce using rule 75 (Exp)
    AND       reduce using rule 75 (Exp)
    OR        reduce using rule 75 (Exp)
    DOT       reduce using rule 75 (Exp)
    NOT       reduce using rule 35 (CompSt)
    NOT       [reduce using rule 45 (Stmt)]
    LP        reduce using rule 35 (CompSt)
    LP        [reduce using rule 45 (Stmt)]
    LB        reduce using rule 75 (Exp)
    LC        reduce using rule 35 (CompSt)
    LC        [reduce using rule 45 (Stmt)]
    RC        reduce using rule 35 (CompSt)
    RC        [reduce using rule 45 (Stmt)]
    RETURN    reduce using rule 35 (CompSt)
    RETURN    [reduce using rule 45 (Stmt)]
    IF        reduce using rule 35 (CompSt)
    IF        [reduce using rule 45 (Stmt)]
    ELSE      reduce using rule 35 (CompSt)
    ELSE      [reduce using rule 45 (Stmt)]
    WHILE     reduce using rule 35 (CompSt)
    WHILE     [reduce using rule 45 (Stmt)]
    ID        reduce using rule 35 (CompSt)
    ID        [reduce using rule 45 (Stmt)]
    FLOAT     reduce using rule 35 (CompSt)
    FLOAT     [reduce using rule 45 (Stmt)]
    INT       reduce using rule 35 (CompSt)
    INT       [reduce using rule 45 (Stmt)]
    $default  reduce using rule 35 (CompSt)


State 120

   42 Stmt: IF LP Exp RP Stmt .
   43     | IF LP Exp RP Stmt . ELSE Stmt

    ELSE  shift, and go to state 123

    $default  reduce using rule 42 (Stmt)


State 121

   44 Stmt: WHILE LP Exp RP Stmt .

    $default  reduce using rule 44 (Stmt)


State 122

   76 Args: Exp COMMA Args .

    $default  reduce using rule 76 (Args)


State 123

   43 Stmt: IF LP Exp RP Stmt ELSE . Stmt

    error   shift, and go to state 119
    MINUS   shift, and go to state 56
    NOT     shift, and go to state 57
    LP      shift, and go to state 58
    LC      shift, and go to state 28
    RETURN  shift, and go to state 59
    IF      shift, and go to state 60
    WHILE   shift, and go to state 61
    ID      shift, and go to state 62
    FLOAT   shift, and go to state 63
    INT     shift, and go to state 64

    CompSt  go to state 65
    Stmt    go to state 124
    Exp     go to state 68


State 124

   43 Stmt: IF LP Exp RP Stmt ELSE Stmt .

    $default  reduce using rule 43 (Stmt)
