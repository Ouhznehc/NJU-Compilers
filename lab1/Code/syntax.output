Rules useless in parser due to conflicts

   18 StructSpecifier: error

   39 StmtList: error

   46 Stmt: error

   54 DecList: error

   57 Dec: error

   79 Args: error


State 1 conflicts: 6 reduce/reduce
State 14 conflicts: 5 reduce/reduce
State 16 conflicts: 1 reduce/reduce
State 28 conflicts: 1 shift/reduce
State 30 conflicts: 16 reduce/reduce
State 33 conflicts: 1 shift/reduce
State 34 conflicts: 3 reduce/reduce
State 39 conflicts: 1 reduce/reduce
State 44 conflicts: 3 reduce/reduce
State 55 conflicts: 14 reduce/reduce
State 100 conflicts: 1 reduce/reduce
State 119 conflicts: 14 reduce/reduce


Grammar

    0 $accept: Program $end

    1 Program: ExtDefList
    2        | error

    3 ExtDefList: ExtDef ExtDefList
    4           | %empty
    5           | error

    6 ExtDef: Specifier ExtDecList SEMI
    7       | Specifier SEMI
    8       | Specifier FunDec CompSt
    9       | error

   10 ExtDecList: VarDec
   11           | VarDec COMMA ExtDecList
   12           | error

   13 Specifier: TYPE
   14          | StructSpecifier
   15          | error

   16 StructSpecifier: STRUCT OptTag LC DefList RC
   17                | STRUCT Tag
   18                | error

   19 OptTag: ID
   20       | %empty
   21       | error

   22 Tag: ID
   23    | error

   24 VarDec: ID
   25       | VarDec LB INT RB
   26       | error

   27 FunDec: ID LP VarList RP
   28       | ID LP RP
   29       | error

   30 VarList: ParamDec COMMA VarList
   31        | ParamDec
   32        | error

   33 ParamDec: Specifier VarDec
   34         | error

   35 CompSt: LC DefList StmtList RC
   36       | error

   37 StmtList: Stmt StmtList
   38         | %empty
   39         | error

   40 Stmt: Exp SEMI
   41     | CompSt
   42     | RETURN Exp SEMI
   43     | IF LP Exp RP Stmt
   44     | IF LP Exp RP Stmt ELSE Stmt
   45     | WHILE LP Exp RP Stmt
   46     | error

   47 DefList: Def DefList
   48        | %empty
   49        | error

   50 Def: Specifier DecList SEMI
   51    | error

   52 DecList: Dec
   53        | Dec COMMA DecList
   54        | error

   55 Dec: VarDec
   56    | VarDec ASSIGNOP Exp
   57    | error

   58 Exp: Exp ASSIGNOP Exp
   59    | Exp AND Exp
   60    | Exp OR Exp
   61    | Exp RELOP Exp
   62    | Exp PLUS Exp
   63    | Exp MINUS Exp
   64    | Exp STAR Exp
   65    | Exp DIV Exp
   66    | LP Exp RP
   67    | MINUS Exp
   68    | NOT Exp
   69    | ID LP Args RP
   70    | ID LP RP
   71    | Exp LB Exp RB
   72    | Exp DOT ID
   73    | ID
   74    | INT
   75    | FLOAT
   76    | error

   77 Args: Exp COMMA Args
   78     | Exp
   79     | error


Terminals, with rules where they appear

    $end (0) 0
    error (256) 2 5 9 12 15 18 21 23 26 29 32 34 36 39 46 49 51 54 57 76 79
    SEMI <syntax> (258) 6 7 40 42 50
    COMMA <syntax> (259) 11 30 53 77
    ASSIGNOP <syntax> (260) 56 58
    RELOP <syntax> (261) 61
    PLUS <syntax> (262) 62
    MINUS <syntax> (263) 63 67
    STAR <syntax> (264) 64
    DIV <syntax> (265) 65
    AND <syntax> (266) 59
    OR <syntax> (267) 60
    DOT <syntax> (268) 72
    NOT <syntax> (269) 68
    TYPE <syntax> (270) 13
    LP <syntax> (271) 27 28 43 44 45 66 69 70
    RP <syntax> (272) 27 28 43 44 45 66 69 70
    LB <syntax> (273) 25 71
    RB <syntax> (274) 25 71
    LC <syntax> (275) 16 35
    RC <syntax> (276) 16 35
    STRUCT <syntax> (277) 16 17
    RETURN <syntax> (278) 42
    IF <syntax> (279) 43 44
    ELSE <syntax> (280) 44
    WHILE <syntax> (281) 45
    ID <syntax> (282) 19 22 24 27 28 69 70 72 73
    FLOAT <syntax> (283) 75
    INT <syntax> (284) 25 74
    LOWER_THAN_ELSE (285)


Nonterminals, with rules where they appear

    $accept (31)
        on left: 0
    Program <syntax> (32)
        on left: 1 2
        on right: 0
    ExtDefList <syntax> (33)
        on left: 3 4 5
        on right: 1 3
    ExtDef <syntax> (34)
        on left: 6 7 8 9
        on right: 3
    ExtDecList <syntax> (35)
        on left: 10 11 12
        on right: 6 11
    Specifier <syntax> (36)
        on left: 13 14 15
        on right: 6 7 8 33 50
    StructSpecifier <syntax> (37)
        on left: 16 17 18
        on right: 14
    OptTag <syntax> (38)
        on left: 19 20 21
        on right: 16
    Tag <syntax> (39)
        on left: 22 23
        on right: 17
    VarDec <syntax> (40)
        on left: 24 25 26
        on right: 10 11 25 33 55 56
    FunDec <syntax> (41)
        on left: 27 28 29
        on right: 8
    VarList <syntax> (42)
        on left: 30 31 32
        on right: 27 30
    ParamDec <syntax> (43)
        on left: 33 34
        on right: 30 31
    CompSt <syntax> (44)
        on left: 35 36
        on right: 8 41
    StmtList <syntax> (45)
        on left: 37 38 39
        on right: 35 37
    Stmt <syntax> (46)
        on left: 40 41 42 43 44 45 46
        on right: 37 43 44 45
    DefList <syntax> (47)
        on left: 47 48 49
        on right: 16 35 47
    Def <syntax> (48)
        on left: 50 51
        on right: 47
    DecList <syntax> (49)
        on left: 52 53 54
        on right: 50 53
    Dec <syntax> (50)
        on left: 55 56 57
        on right: 52 53
    Exp <syntax> (51)
        on left: 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76
        on right: 40 42 43 44 45 56 58 59 60 61 62 63 64 65 66 67 68 71 72 77 78
    Args <syntax> (52)
        on left: 77 78 79
        on right: 69 77


State 0

    0 $accept: . Program $end

    error   shift, and go to state 1
    TYPE    shift, and go to state 2
    STRUCT  shift, and go to state 3

    $end  reduce using rule 4 (ExtDefList)

    Program          go to state 4
    ExtDefList       go to state 5
    ExtDef           go to state 6
    Specifier        go to state 7
    StructSpecifier  go to state 8


State 1

    2 Program: error .
    5 ExtDefList: error .
    9 ExtDef: error .
   15 Specifier: error .
   18 StructSpecifier: error .

    $end      reduce using rule 2 (Program)
    $end      [reduce using rule 5 (ExtDefList)]
    $end      [reduce using rule 9 (ExtDef)]
    error     reduce using rule 9 (ExtDef)
    error     [reduce using rule 15 (Specifier)]
    error     [reduce using rule 18 (StructSpecifier)]
    SEMI      reduce using rule 15 (Specifier)
    SEMI      [reduce using rule 18 (StructSpecifier)]
    ID        reduce using rule 15 (Specifier)
    ID        [reduce using rule 18 (StructSpecifier)]
    $default  reduce using rule 9 (ExtDef)


State 2

   13 Specifier: TYPE .

    $default  reduce using rule 13 (Specifier)


State 3

   16 StructSpecifier: STRUCT . OptTag LC DefList RC
   17                | STRUCT . Tag

    error  shift, and go to state 9
    ID     shift, and go to state 10

    LC  reduce using rule 20 (OptTag)

    OptTag  go to state 11
    Tag     go to state 12


State 4

    0 $accept: Program . $end

    $end  shift, and go to state 13


State 5

    1 Program: ExtDefList .

    $default  reduce using rule 1 (Program)


State 6

    3 ExtDefList: ExtDef . ExtDefList

    error   shift, and go to state 14
    TYPE    shift, and go to state 2
    STRUCT  shift, and go to state 3

    $end  reduce using rule 4 (ExtDefList)

    ExtDefList       go to state 15
    ExtDef           go to state 6
    Specifier        go to state 7
    StructSpecifier  go to state 8


State 7

    6 ExtDef: Specifier . ExtDecList SEMI
    7       | Specifier . SEMI
    8       | Specifier . FunDec CompSt

    error  shift, and go to state 16
    SEMI   shift, and go to state 17
    ID     shift, and go to state 18

    ExtDecList  go to state 19
    VarDec      go to state 20
    FunDec      go to state 21


State 8

   14 Specifier: StructSpecifier .

    $default  reduce using rule 14 (Specifier)


State 9

   21 OptTag: error .
   23 Tag: error .

    LC        reduce using rule 21 (OptTag)
    $default  reduce using rule 23 (Tag)


State 10

   19 OptTag: ID .
   22 Tag: ID .

    LC        reduce using rule 19 (OptTag)
    $default  reduce using rule 22 (Tag)


State 11

   16 StructSpecifier: STRUCT OptTag . LC DefList RC

    LC  shift, and go to state 22


State 12

   17 StructSpecifier: STRUCT Tag .

    $default  reduce using rule 17 (StructSpecifier)


State 13

    0 $accept: Program $end .

    $default  accept


State 14

    5 ExtDefList: error .
    9 ExtDef: error .
   15 Specifier: error .
   18 StructSpecifier: error .

    $end      reduce using rule 5 (ExtDefList)
    $end      [reduce using rule 9 (ExtDef)]
    error     reduce using rule 9 (ExtDef)
    error     [reduce using rule 15 (Specifier)]
    error     [reduce using rule 18 (StructSpecifier)]
    SEMI      reduce using rule 15 (Specifier)
    SEMI      [reduce using rule 18 (StructSpecifier)]
    ID        reduce using rule 15 (Specifier)
    ID        [reduce using rule 18 (StructSpecifier)]
    $default  reduce using rule 9 (ExtDef)


State 15

    3 ExtDefList: ExtDef ExtDefList .

    $default  reduce using rule 3 (ExtDefList)


State 16

   12 ExtDecList: error .
   26 VarDec: error .
   29 FunDec: error .

    error     reduce using rule 29 (FunDec)
    SEMI      reduce using rule 12 (ExtDecList)
    SEMI      [reduce using rule 26 (VarDec)]
    LC        reduce using rule 29 (FunDec)
    $default  reduce using rule 26 (VarDec)


State 17

    7 ExtDef: Specifier SEMI .

    $default  reduce using rule 7 (ExtDef)


State 18

   24 VarDec: ID .
   27 FunDec: ID . LP VarList RP
   28       | ID . LP RP

    LP  shift, and go to state 23

    $default  reduce using rule 24 (VarDec)


State 19

    6 ExtDef: Specifier ExtDecList . SEMI

    SEMI  shift, and go to state 24


State 20

   10 ExtDecList: VarDec .
   11           | VarDec . COMMA ExtDecList
   25 VarDec: VarDec . LB INT RB

    COMMA  shift, and go to state 25
    LB     shift, and go to state 26

    $default  reduce using rule 10 (ExtDecList)


State 21

    8 ExtDef: Specifier FunDec . CompSt

    error  shift, and go to state 27
    LC     shift, and go to state 28

    CompSt  go to state 29


State 22

   16 StructSpecifier: STRUCT OptTag LC . DefList RC

    error   shift, and go to state 30
    TYPE    shift, and go to state 2
    STRUCT  shift, and go to state 3

    RC  reduce using rule 48 (DefList)

    Specifier        go to state 31
    StructSpecifier  go to state 8
    DefList          go to state 32
    Def              go to state 33


State 23

   27 FunDec: ID LP . VarList RP
   28       | ID LP . RP

    error   shift, and go to state 34
    TYPE    shift, and go to state 2
    RP      shift, and go to state 35
    STRUCT  shift, and go to state 3

    Specifier        go to state 36
    StructSpecifier  go to state 8
    VarList          go to state 37
    ParamDec         go to state 38


State 24

    6 ExtDef: Specifier ExtDecList SEMI .

    $default  reduce using rule 6 (ExtDef)


State 25

   11 ExtDecList: VarDec COMMA . ExtDecList

    error  shift, and go to state 39
    ID     shift, and go to state 40

    ExtDecList  go to state 41
    VarDec      go to state 20


State 26

   25 VarDec: VarDec LB . INT RB

    INT  shift, and go to state 42


State 27

   36 CompSt: error .

    $default  reduce using rule 36 (CompSt)


State 28

   35 CompSt: LC . DefList StmtList RC

    error   shift, and go to state 30
    TYPE    shift, and go to state 2
    STRUCT  shift, and go to state 3

    error   [reduce using rule 48 (DefList)]
    MINUS   reduce using rule 48 (DefList)
    NOT     reduce using rule 48 (DefList)
    LP      reduce using rule 48 (DefList)
    LC      reduce using rule 48 (DefList)
    RC      reduce using rule 48 (DefList)
    RETURN  reduce using rule 48 (DefList)
    IF      reduce using rule 48 (DefList)
    WHILE   reduce using rule 48 (DefList)
    ID      reduce using rule 48 (DefList)
    FLOAT   reduce using rule 48 (DefList)
    INT     reduce using rule 48 (DefList)

    Specifier        go to state 31
    StructSpecifier  go to state 8
    DefList          go to state 43
    Def              go to state 33


State 29

    8 ExtDef: Specifier FunDec CompSt .

    $default  reduce using rule 8 (ExtDef)


State 30

   15 Specifier: error .
   18 StructSpecifier: error .
   49 DefList: error .
   51 Def: error .

    error     reduce using rule 15 (Specifier)
    error     [reduce using rule 18 (StructSpecifier)]
    error     [reduce using rule 49 (DefList)]
    error     [reduce using rule 51 (Def)]
    MINUS     reduce using rule 49 (DefList)
    MINUS     [reduce using rule 51 (Def)]
    NOT       reduce using rule 49 (DefList)
    NOT       [reduce using rule 51 (Def)]
    TYPE      reduce using rule 51 (Def)
    LP        reduce using rule 49 (DefList)
    LP        [reduce using rule 51 (Def)]
    LC        reduce using rule 49 (DefList)
    LC        [reduce using rule 51 (Def)]
    RC        reduce using rule 49 (DefList)
    RC        [reduce using rule 51 (Def)]
    STRUCT    reduce using rule 51 (Def)
    RETURN    reduce using rule 49 (DefList)
    RETURN    [reduce using rule 51 (Def)]
    IF        reduce using rule 49 (DefList)
    IF        [reduce using rule 51 (Def)]
    WHILE     reduce using rule 49 (DefList)
    WHILE     [reduce using rule 51 (Def)]
    ID        reduce using rule 15 (Specifier)
    ID        [reduce using rule 18 (StructSpecifier)]
    ID        [reduce using rule 49 (DefList)]
    ID        [reduce using rule 51 (Def)]
    FLOAT     reduce using rule 49 (DefList)
    FLOAT     [reduce using rule 51 (Def)]
    INT       reduce using rule 49 (DefList)
    INT       [reduce using rule 51 (Def)]
    $default  reduce using rule 49 (DefList)


State 31

   50 Def: Specifier . DecList SEMI

    error  shift, and go to state 44
    ID     shift, and go to state 40

    VarDec   go to state 45
    DecList  go to state 46
    Dec      go to state 47


State 32

   16 StructSpecifier: STRUCT OptTag LC DefList . RC

    RC  shift, and go to state 48


State 33

   47 DefList: Def . DefList

    error   shift, and go to state 30
    TYPE    shift, and go to state 2
    STRUCT  shift, and go to state 3

    error   [reduce using rule 48 (DefList)]
    MINUS   reduce using rule 48 (DefList)
    NOT     reduce using rule 48 (DefList)
    LP      reduce using rule 48 (DefList)
    LC      reduce using rule 48 (DefList)
    RC      reduce using rule 48 (DefList)
    RETURN  reduce using rule 48 (DefList)
    IF      reduce using rule 48 (DefList)
    WHILE   reduce using rule 48 (DefList)
    ID      reduce using rule 48 (DefList)
    FLOAT   reduce using rule 48 (DefList)
    INT     reduce using rule 48 (DefList)

    Specifier        go to state 31
    StructSpecifier  go to state 8
    DefList          go to state 49
    Def              go to state 33


State 34

   15 Specifier: error .
   18 StructSpecifier: error .
   32 VarList: error .
   34 ParamDec: error .

    error     reduce using rule 15 (Specifier)
    error     [reduce using rule 18 (StructSpecifier)]
    COMMA     reduce using rule 34 (ParamDec)
    RP        reduce using rule 32 (VarList)
    RP        [reduce using rule 34 (ParamDec)]
    ID        reduce using rule 15 (Specifier)
    ID        [reduce using rule 18 (StructSpecifier)]
    $default  reduce using rule 15 (Specifier)


State 35

   28 FunDec: ID LP RP .

    $default  reduce using rule 28 (FunDec)


State 36

   33 ParamDec: Specifier . VarDec

    error  shift, and go to state 50
    ID     shift, and go to state 40

    VarDec  go to state 51


State 37

   27 FunDec: ID LP VarList . RP

    RP  shift, and go to state 52


State 38

   30 VarList: ParamDec . COMMA VarList
   31        | ParamDec .

    COMMA  shift, and go to state 53

    $default  reduce using rule 31 (VarList)


State 39

   12 ExtDecList: error .
   26 VarDec: error .

    SEMI      reduce using rule 12 (ExtDecList)
    SEMI      [reduce using rule 26 (VarDec)]
    $default  reduce using rule 26 (VarDec)


State 40

   24 VarDec: ID .

    $default  reduce using rule 24 (VarDec)


State 41

   11 ExtDecList: VarDec COMMA ExtDecList .

    $default  reduce using rule 11 (ExtDecList)


State 42

   25 VarDec: VarDec LB INT . RB

    RB  shift, and go to state 54


State 43

   35 CompSt: LC DefList . StmtList RC

    error   shift, and go to state 55
    MINUS   shift, and go to state 56
    NOT     shift, and go to state 57
    LP      shift, and go to state 58
    LC      shift, and go to state 28
    RETURN  shift, and go to state 59
    IF      shift, and go to state 60
    WHILE   shift, and go to state 61
    ID      shift, and go to state 62
    FLOAT   shift, and go to state 63
    INT     shift, and go to state 64

    RC  reduce using rule 38 (StmtList)

    CompSt    go to state 65
    StmtList  go to state 66
    Stmt      go to state 67
    Exp       go to state 68


State 44

   26 VarDec: error .
   54 DecList: error .
   57 Dec: error .

    SEMI      reduce using rule 26 (VarDec)
    SEMI      [reduce using rule 54 (DecList)]
    SEMI      [reduce using rule 57 (Dec)]
    COMMA     reduce using rule 26 (VarDec)
    COMMA     [reduce using rule 57 (Dec)]
    $default  reduce using rule 26 (VarDec)


State 45

   25 VarDec: VarDec . LB INT RB
   55 Dec: VarDec .
   56    | VarDec . ASSIGNOP Exp

    ASSIGNOP  shift, and go to state 69
    LB        shift, and go to state 26

    $default  reduce using rule 55 (Dec)


State 46

   50 Def: Specifier DecList . SEMI

    SEMI  shift, and go to state 70


State 47

   52 DecList: Dec .
   53        | Dec . COMMA DecList

    COMMA  shift, and go to state 71

    $default  reduce using rule 52 (DecList)


State 48

   16 StructSpecifier: STRUCT OptTag LC DefList RC .

    $default  reduce using rule 16 (StructSpecifier)


State 49

   47 DefList: Def DefList .

    $default  reduce using rule 47 (DefList)


State 50

   26 VarDec: error .

    $default  reduce using rule 26 (VarDec)


State 51

   25 VarDec: VarDec . LB INT RB
   33 ParamDec: Specifier VarDec .

    LB  shift, and go to state 26

    $default  reduce using rule 33 (ParamDec)


State 52

   27 FunDec: ID LP VarList RP .

    $default  reduce using rule 27 (FunDec)


State 53

   30 VarList: ParamDec COMMA . VarList

    error   shift, and go to state 34
    TYPE    shift, and go to state 2
    STRUCT  shift, and go to state 3

    Specifier        go to state 36
    StructSpecifier  go to state 8
    VarList          go to state 72
    ParamDec         go to state 38


State 54

   25 VarDec: VarDec LB INT RB .

    $default  reduce using rule 25 (VarDec)


State 55

   36 CompSt: error .
   39 StmtList: error .
   46 Stmt: error .
   76 Exp: error .

    error     reduce using rule 36 (CompSt)
    error     [reduce using rule 46 (Stmt)]
    SEMI      reduce using rule 76 (Exp)
    ASSIGNOP  reduce using rule 76 (Exp)
    RELOP     reduce using rule 76 (Exp)
    PLUS      reduce using rule 76 (Exp)
    MINUS     reduce using rule 36 (CompSt)
    MINUS     [reduce using rule 46 (Stmt)]
    MINUS     [reduce using rule 76 (Exp)]
    STAR      reduce using rule 76 (Exp)
    DIV       reduce using rule 76 (Exp)
    AND       reduce using rule 76 (Exp)
    OR        reduce using rule 76 (Exp)
    DOT       reduce using rule 76 (Exp)
    NOT       reduce using rule 36 (CompSt)
    NOT       [reduce using rule 46 (Stmt)]
    LP        reduce using rule 36 (CompSt)
    LP        [reduce using rule 46 (Stmt)]
    LB        reduce using rule 76 (Exp)
    LC        reduce using rule 36 (CompSt)
    LC        [reduce using rule 46 (Stmt)]
    RC        reduce using rule 36 (CompSt)
    RC        [reduce using rule 39 (StmtList)]
    RC        [reduce using rule 46 (Stmt)]
    RETURN    reduce using rule 36 (CompSt)
    RETURN    [reduce using rule 46 (Stmt)]
    IF        reduce using rule 36 (CompSt)
    IF        [reduce using rule 46 (Stmt)]
    WHILE     reduce using rule 36 (CompSt)
    WHILE     [reduce using rule 46 (Stmt)]
    ID        reduce using rule 36 (CompSt)
    ID        [reduce using rule 46 (Stmt)]
    FLOAT     reduce using rule 36 (CompSt)
    FLOAT     [reduce using rule 46 (Stmt)]
    INT       reduce using rule 36 (CompSt)
    INT       [reduce using rule 46 (Stmt)]
    $default  reduce using rule 36 (CompSt)


State 56

   67 Exp: MINUS . Exp

    error  shift, and go to state 73
    MINUS  shift, and go to state 56
    NOT    shift, and go to state 57
    LP     shift, and go to state 58
    ID     shift, and go to state 62
    FLOAT  shift, and go to state 63
    INT    shift, and go to state 64

    Exp  go to state 74


State 57

   68 Exp: NOT . Exp

    error  shift, and go to state 73
    MINUS  shift, and go to state 56
    NOT    shift, and go to state 57
    LP     shift, and go to state 58
    ID     shift, and go to state 62
    FLOAT  shift, and go to state 63
    INT    shift, and go to state 64

    Exp  go to state 75


State 58

   66 Exp: LP . Exp RP

    error  shift, and go to state 73
    MINUS  shift, and go to state 56
    NOT    shift, and go to state 57
    LP     shift, and go to state 58
    ID     shift, and go to state 62
    FLOAT  shift, and go to state 63
    INT    shift, and go to state 64

    Exp  go to state 76


State 59

   42 Stmt: RETURN . Exp SEMI

    error  shift, and go to state 73
    MINUS  shift, and go to state 56
    NOT    shift, and go to state 57
    LP     shift, and go to state 58
    ID     shift, and go to state 62
    FLOAT  shift, and go to state 63
    INT    shift, and go to state 64

    Exp  go to state 77


State 60

   43 Stmt: IF . LP Exp RP Stmt
   44     | IF . LP Exp RP Stmt ELSE Stmt

    LP  shift, and go to state 78


State 61

   45 Stmt: WHILE . LP Exp RP Stmt

    LP  shift, and go to state 79


State 62

   69 Exp: ID . LP Args RP
   70    | ID . LP RP
   73    | ID .

    LP  shift, and go to state 80

    $default  reduce using rule 73 (Exp)


State 63

   75 Exp: FLOAT .

    $default  reduce using rule 75 (Exp)


State 64

   74 Exp: INT .

    $default  reduce using rule 74 (Exp)


State 65

   41 Stmt: CompSt .

    $default  reduce using rule 41 (Stmt)


State 66

   35 CompSt: LC DefList StmtList . RC

    RC  shift, and go to state 81


State 67

   37 StmtList: Stmt . StmtList

    error   shift, and go to state 55
    MINUS   shift, and go to state 56
    NOT     shift, and go to state 57
    LP      shift, and go to state 58
    LC      shift, and go to state 28
    RETURN  shift, and go to state 59
    IF      shift, and go to state 60
    WHILE   shift, and go to state 61
    ID      shift, and go to state 62
    FLOAT   shift, and go to state 63
    INT     shift, and go to state 64

    RC  reduce using rule 38 (StmtList)

    CompSt    go to state 65
    StmtList  go to state 82
    Stmt      go to state 67
    Exp       go to state 68


State 68

   40 Stmt: Exp . SEMI
   58 Exp: Exp . ASSIGNOP Exp
   59    | Exp . AND Exp
   60    | Exp . OR Exp
   61    | Exp . RELOP Exp
   62    | Exp . PLUS Exp
   63    | Exp . MINUS Exp
   64    | Exp . STAR Exp
   65    | Exp . DIV Exp
   71    | Exp . LB Exp RB
   72    | Exp . DOT ID

    SEMI      shift, and go to state 83
    ASSIGNOP  shift, and go to state 84
    RELOP     shift, and go to state 85
    PLUS      shift, and go to state 86
    MINUS     shift, and go to state 87
    STAR      shift, and go to state 88
    DIV       shift, and go to state 89
    AND       shift, and go to state 90
    OR        shift, and go to state 91
    DOT       shift, and go to state 92
    LB        shift, and go to state 93


State 69

   56 Dec: VarDec ASSIGNOP . Exp

    error  shift, and go to state 73
    MINUS  shift, and go to state 56
    NOT    shift, and go to state 57
    LP     shift, and go to state 58
    ID     shift, and go to state 62
    FLOAT  shift, and go to state 63
    INT    shift, and go to state 64

    Exp  go to state 94


State 70

   50 Def: Specifier DecList SEMI .

    $default  reduce using rule 50 (Def)


State 71

   53 DecList: Dec COMMA . DecList

    error  shift, and go to state 44
    ID     shift, and go to state 40

    VarDec   go to state 45
    DecList  go to state 95
    Dec      go to state 47


State 72

   30 VarList: ParamDec COMMA VarList .

    $default  reduce using rule 30 (VarList)


State 73

   76 Exp: error .

    $default  reduce using rule 76 (Exp)


State 74

   58 Exp: Exp . ASSIGNOP Exp
   59    | Exp . AND Exp
   60    | Exp . OR Exp
   61    | Exp . RELOP Exp
   62    | Exp . PLUS Exp
   63    | Exp . MINUS Exp
   64    | Exp . STAR Exp
   65    | Exp . DIV Exp
   67    | MINUS Exp .
   71    | Exp . LB Exp RB
   72    | Exp . DOT ID

    DOT  shift, and go to state 92
    LB   shift, and go to state 93

    $default  reduce using rule 67 (Exp)


State 75

   58 Exp: Exp . ASSIGNOP Exp
   59    | Exp . AND Exp
   60    | Exp . OR Exp
   61    | Exp . RELOP Exp
   62    | Exp . PLUS Exp
   63    | Exp . MINUS Exp
   64    | Exp . STAR Exp
   65    | Exp . DIV Exp
   68    | NOT Exp .
   71    | Exp . LB Exp RB
   72    | Exp . DOT ID

    DOT  shift, and go to state 92
    LB   shift, and go to state 93

    $default  reduce using rule 68 (Exp)


State 76

   58 Exp: Exp . ASSIGNOP Exp
   59    | Exp . AND Exp
   60    | Exp . OR Exp
   61    | Exp . RELOP Exp
   62    | Exp . PLUS Exp
   63    | Exp . MINUS Exp
   64    | Exp . STAR Exp
   65    | Exp . DIV Exp
   66    | LP Exp . RP
   71    | Exp . LB Exp RB
   72    | Exp . DOT ID

    ASSIGNOP  shift, and go to state 84
    RELOP     shift, and go to state 85
    PLUS      shift, and go to state 86
    MINUS     shift, and go to state 87
    STAR      shift, and go to state 88
    DIV       shift, and go to state 89
    AND       shift, and go to state 90
    OR        shift, and go to state 91
    DOT       shift, and go to state 92
    RP        shift, and go to state 96
    LB        shift, and go to state 93


State 77

   42 Stmt: RETURN Exp . SEMI
   58 Exp: Exp . ASSIGNOP Exp
   59    | Exp . AND Exp
   60    | Exp . OR Exp
   61    | Exp . RELOP Exp
   62    | Exp . PLUS Exp
   63    | Exp . MINUS Exp
   64    | Exp . STAR Exp
   65    | Exp . DIV Exp
   71    | Exp . LB Exp RB
   72    | Exp . DOT ID

    SEMI      shift, and go to state 97
    ASSIGNOP  shift, and go to state 84
    RELOP     shift, and go to state 85
    PLUS      shift, and go to state 86
    MINUS     shift, and go to state 87
    STAR      shift, and go to state 88
    DIV       shift, and go to state 89
    AND       shift, and go to state 90
    OR        shift, and go to state 91
    DOT       shift, and go to state 92
    LB        shift, and go to state 93


State 78

   43 Stmt: IF LP . Exp RP Stmt
   44     | IF LP . Exp RP Stmt ELSE Stmt

    error  shift, and go to state 73
    MINUS  shift, and go to state 56
    NOT    shift, and go to state 57
    LP     shift, and go to state 58
    ID     shift, and go to state 62
    FLOAT  shift, and go to state 63
    INT    shift, and go to state 64

    Exp  go to state 98


State 79

   45 Stmt: WHILE LP . Exp RP Stmt

    error  shift, and go to state 73
    MINUS  shift, and go to state 56
    NOT    shift, and go to state 57
    LP     shift, and go to state 58
    ID     shift, and go to state 62
    FLOAT  shift, and go to state 63
    INT    shift, and go to state 64

    Exp  go to state 99


State 80

   69 Exp: ID LP . Args RP
   70    | ID LP . RP

    error  shift, and go to state 100
    MINUS  shift, and go to state 56
    NOT    shift, and go to state 57
    LP     shift, and go to state 58
    RP     shift, and go to state 101
    ID     shift, and go to state 62
    FLOAT  shift, and go to state 63
    INT    shift, and go to state 64

    Exp   go to state 102
    Args  go to state 103


State 81

   35 CompSt: LC DefList StmtList RC .

    $default  reduce using rule 35 (CompSt)


State 82

   37 StmtList: Stmt StmtList .

    $default  reduce using rule 37 (StmtList)


State 83

   40 Stmt: Exp SEMI .

    $default  reduce using rule 40 (Stmt)


State 84

   58 Exp: Exp ASSIGNOP . Exp

    error  shift, and go to state 73
    MINUS  shift, and go to state 56
    NOT    shift, and go to state 57
    LP     shift, and go to state 58
    ID     shift, and go to state 62
    FLOAT  shift, and go to state 63
    INT    shift, and go to state 64

    Exp  go to state 104


State 85

   61 Exp: Exp RELOP . Exp

    error  shift, and go to state 73
    MINUS  shift, and go to state 56
    NOT    shift, and go to state 57
    LP     shift, and go to state 58
    ID     shift, and go to state 62
    FLOAT  shift, and go to state 63
    INT    shift, and go to state 64

    Exp  go to state 105


State 86

   62 Exp: Exp PLUS . Exp

    error  shift, and go to state 73
    MINUS  shift, and go to state 56
    NOT    shift, and go to state 57
    LP     shift, and go to state 58
    ID     shift, and go to state 62
    FLOAT  shift, and go to state 63
    INT    shift, and go to state 64

    Exp  go to state 106


State 87

   63 Exp: Exp MINUS . Exp

    error  shift, and go to state 73
    MINUS  shift, and go to state 56
    NOT    shift, and go to state 57
    LP     shift, and go to state 58
    ID     shift, and go to state 62
    FLOAT  shift, and go to state 63
    INT    shift, and go to state 64

    Exp  go to state 107


State 88

   64 Exp: Exp STAR . Exp

    error  shift, and go to state 73
    MINUS  shift, and go to state 56
    NOT    shift, and go to state 57
    LP     shift, and go to state 58
    ID     shift, and go to state 62
    FLOAT  shift, and go to state 63
    INT    shift, and go to state 64

    Exp  go to state 108


State 89

   65 Exp: Exp DIV . Exp

    error  shift, and go to state 73
    MINUS  shift, and go to state 56
    NOT    shift, and go to state 57
    LP     shift, and go to state 58
    ID     shift, and go to state 62
    FLOAT  shift, and go to state 63
    INT    shift, and go to state 64

    Exp  go to state 109


State 90

   59 Exp: Exp AND . Exp

    error  shift, and go to state 73
    MINUS  shift, and go to state 56
    NOT    shift, and go to state 57
    LP     shift, and go to state 58
    ID     shift, and go to state 62
    FLOAT  shift, and go to state 63
    INT    shift, and go to state 64

    Exp  go to state 110


State 91

   60 Exp: Exp OR . Exp

    error  shift, and go to state 73
    MINUS  shift, and go to state 56
    NOT    shift, and go to state 57
    LP     shift, and go to state 58
    ID     shift, and go to state 62
    FLOAT  shift, and go to state 63
    INT    shift, and go to state 64

    Exp  go to state 111


State 92

   72 Exp: Exp DOT . ID

    ID  shift, and go to state 112


State 93

   71 Exp: Exp LB . Exp RB

    error  shift, and go to state 73
    MINUS  shift, and go to state 56
    NOT    shift, and go to state 57
    LP     shift, and go to state 58
    ID     shift, and go to state 62
    FLOAT  shift, and go to state 63
    INT    shift, and go to state 64

    Exp  go to state 113


State 94

   56 Dec: VarDec ASSIGNOP Exp .
   58 Exp: Exp . ASSIGNOP Exp
   59    | Exp . AND Exp
   60    | Exp . OR Exp
   61    | Exp . RELOP Exp
   62    | Exp . PLUS Exp
   63    | Exp . MINUS Exp
   64    | Exp . STAR Exp
   65    | Exp . DIV Exp
   71    | Exp . LB Exp RB
   72    | Exp . DOT ID

    ASSIGNOP  shift, and go to state 84
    RELOP     shift, and go to state 85
    PLUS      shift, and go to state 86
    MINUS     shift, and go to state 87
    STAR      shift, and go to state 88
    DIV       shift, and go to state 89
    AND       shift, and go to state 90
    OR        shift, and go to state 91
    DOT       shift, and go to state 92
    LB        shift, and go to state 93

    $default  reduce using rule 56 (Dec)


State 95

   53 DecList: Dec COMMA DecList .

    $default  reduce using rule 53 (DecList)


State 96

   66 Exp: LP Exp RP .

    $default  reduce using rule 66 (Exp)


State 97

   42 Stmt: RETURN Exp SEMI .

    $default  reduce using rule 42 (Stmt)


State 98

   43 Stmt: IF LP Exp . RP Stmt
   44     | IF LP Exp . RP Stmt ELSE Stmt
   58 Exp: Exp . ASSIGNOP Exp
   59    | Exp . AND Exp
   60    | Exp . OR Exp
   61    | Exp . RELOP Exp
   62    | Exp . PLUS Exp
   63    | Exp . MINUS Exp
   64    | Exp . STAR Exp
   65    | Exp . DIV Exp
   71    | Exp . LB Exp RB
   72    | Exp . DOT ID

    ASSIGNOP  shift, and go to state 84
    RELOP     shift, and go to state 85
    PLUS      shift, and go to state 86
    MINUS     shift, and go to state 87
    STAR      shift, and go to state 88
    DIV       shift, and go to state 89
    AND       shift, and go to state 90
    OR        shift, and go to state 91
    DOT       shift, and go to state 92
    RP        shift, and go to state 114
    LB        shift, and go to state 93


State 99

   45 Stmt: WHILE LP Exp . RP Stmt
   58 Exp: Exp . ASSIGNOP Exp
   59    | Exp . AND Exp
   60    | Exp . OR Exp
   61    | Exp . RELOP Exp
   62    | Exp . PLUS Exp
   63    | Exp . MINUS Exp
   64    | Exp . STAR Exp
   65    | Exp . DIV Exp
   71    | Exp . LB Exp RB
   72    | Exp . DOT ID

    ASSIGNOP  shift, and go to state 84
    RELOP     shift, and go to state 85
    PLUS      shift, and go to state 86
    MINUS     shift, and go to state 87
    STAR      shift, and go to state 88
    DIV       shift, and go to state 89
    AND       shift, and go to state 90
    OR        shift, and go to state 91
    DOT       shift, and go to state 92
    RP        shift, and go to state 115
    LB        shift, and go to state 93


State 100

   76 Exp: error .
   79 Args: error .

    RP        reduce using rule 76 (Exp)
    RP        [reduce using rule 79 (Args)]
    $default  reduce using rule 76 (Exp)


State 101

   70 Exp: ID LP RP .

    $default  reduce using rule 70 (Exp)


State 102

   58 Exp: Exp . ASSIGNOP Exp
   59    | Exp . AND Exp
   60    | Exp . OR Exp
   61    | Exp . RELOP Exp
   62    | Exp . PLUS Exp
   63    | Exp . MINUS Exp
   64    | Exp . STAR Exp
   65    | Exp . DIV Exp
   71    | Exp . LB Exp RB
   72    | Exp . DOT ID
   77 Args: Exp . COMMA Args
   78     | Exp .

    COMMA     shift, and go to state 116
    ASSIGNOP  shift, and go to state 84
    RELOP     shift, and go to state 85
    PLUS      shift, and go to state 86
    MINUS     shift, and go to state 87
    STAR      shift, and go to state 88
    DIV       shift, and go to state 89
    AND       shift, and go to state 90
    OR        shift, and go to state 91
    DOT       shift, and go to state 92
    LB        shift, and go to state 93

    $default  reduce using rule 78 (Args)


State 103

   69 Exp: ID LP Args . RP

    RP  shift, and go to state 117


State 104

   58 Exp: Exp . ASSIGNOP Exp
   58    | Exp ASSIGNOP Exp .
   59    | Exp . AND Exp
   60    | Exp . OR Exp
   61    | Exp . RELOP Exp
   62    | Exp . PLUS Exp
   63    | Exp . MINUS Exp
   64    | Exp . STAR Exp
   65    | Exp . DIV Exp
   71    | Exp . LB Exp RB
   72    | Exp . DOT ID

    ASSIGNOP  shift, and go to state 84
    RELOP     shift, and go to state 85
    PLUS      shift, and go to state 86
    MINUS     shift, and go to state 87
    STAR      shift, and go to state 88
    DIV       shift, and go to state 89
    AND       shift, and go to state 90
    OR        shift, and go to state 91
    DOT       shift, and go to state 92
    LB        shift, and go to state 93

    $default  reduce using rule 58 (Exp)


State 105

   58 Exp: Exp . ASSIGNOP Exp
   59    | Exp . AND Exp
   60    | Exp . OR Exp
   61    | Exp . RELOP Exp
   61    | Exp RELOP Exp .
   62    | Exp . PLUS Exp
   63    | Exp . MINUS Exp
   64    | Exp . STAR Exp
   65    | Exp . DIV Exp
   71    | Exp . LB Exp RB
   72    | Exp . DOT ID

    PLUS   shift, and go to state 86
    MINUS  shift, and go to state 87
    STAR   shift, and go to state 88
    DIV    shift, and go to state 89
    DOT    shift, and go to state 92
    LB     shift, and go to state 93

    $default  reduce using rule 61 (Exp)


State 106

   58 Exp: Exp . ASSIGNOP Exp
   59    | Exp . AND Exp
   60    | Exp . OR Exp
   61    | Exp . RELOP Exp
   62    | Exp . PLUS Exp
   62    | Exp PLUS Exp .
   63    | Exp . MINUS Exp
   64    | Exp . STAR Exp
   65    | Exp . DIV Exp
   71    | Exp . LB Exp RB
   72    | Exp . DOT ID

    STAR  shift, and go to state 88
    DIV   shift, and go to state 89
    DOT   shift, and go to state 92
    LB    shift, and go to state 93

    $default  reduce using rule 62 (Exp)


State 107

   58 Exp: Exp . ASSIGNOP Exp
   59    | Exp . AND Exp
   60    | Exp . OR Exp
   61    | Exp . RELOP Exp
   62    | Exp . PLUS Exp
   63    | Exp . MINUS Exp
   63    | Exp MINUS Exp .
   64    | Exp . STAR Exp
   65    | Exp . DIV Exp
   71    | Exp . LB Exp RB
   72    | Exp . DOT ID

    STAR  shift, and go to state 88
    DIV   shift, and go to state 89
    DOT   shift, and go to state 92
    LB    shift, and go to state 93

    $default  reduce using rule 63 (Exp)


State 108

   58 Exp: Exp . ASSIGNOP Exp
   59    | Exp . AND Exp
   60    | Exp . OR Exp
   61    | Exp . RELOP Exp
   62    | Exp . PLUS Exp
   63    | Exp . MINUS Exp
   64    | Exp . STAR Exp
   64    | Exp STAR Exp .
   65    | Exp . DIV Exp
   71    | Exp . LB Exp RB
   72    | Exp . DOT ID

    DOT  shift, and go to state 92
    LB   shift, and go to state 93

    $default  reduce using rule 64 (Exp)


State 109

   58 Exp: Exp . ASSIGNOP Exp
   59    | Exp . AND Exp
   60    | Exp . OR Exp
   61    | Exp . RELOP Exp
   62    | Exp . PLUS Exp
   63    | Exp . MINUS Exp
   64    | Exp . STAR Exp
   65    | Exp . DIV Exp
   65    | Exp DIV Exp .
   71    | Exp . LB Exp RB
   72    | Exp . DOT ID

    DOT  shift, and go to state 92
    LB   shift, and go to state 93

    $default  reduce using rule 65 (Exp)


State 110

   58 Exp: Exp . ASSIGNOP Exp
   59    | Exp . AND Exp
   59    | Exp AND Exp .
   60    | Exp . OR Exp
   61    | Exp . RELOP Exp
   62    | Exp . PLUS Exp
   63    | Exp . MINUS Exp
   64    | Exp . STAR Exp
   65    | Exp . DIV Exp
   71    | Exp . LB Exp RB
   72    | Exp . DOT ID

    RELOP  shift, and go to state 85
    PLUS   shift, and go to state 86
    MINUS  shift, and go to state 87
    STAR   shift, and go to state 88
    DIV    shift, and go to state 89
    DOT    shift, and go to state 92
    LB     shift, and go to state 93

    $default  reduce using rule 59 (Exp)


State 111

   58 Exp: Exp . ASSIGNOP Exp
   59    | Exp . AND Exp
   60    | Exp . OR Exp
   60    | Exp OR Exp .
   61    | Exp . RELOP Exp
   62    | Exp . PLUS Exp
   63    | Exp . MINUS Exp
   64    | Exp . STAR Exp
   65    | Exp . DIV Exp
   71    | Exp . LB Exp RB
   72    | Exp . DOT ID

    RELOP  shift, and go to state 85
    PLUS   shift, and go to state 86
    MINUS  shift, and go to state 87
    STAR   shift, and go to state 88
    DIV    shift, and go to state 89
    AND    shift, and go to state 90
    DOT    shift, and go to state 92
    LB     shift, and go to state 93

    $default  reduce using rule 60 (Exp)


State 112

   72 Exp: Exp DOT ID .

    $default  reduce using rule 72 (Exp)


State 113

   58 Exp: Exp . ASSIGNOP Exp
   59    | Exp . AND Exp
   60    | Exp . OR Exp
   61    | Exp . RELOP Exp
   62    | Exp . PLUS Exp
   63    | Exp . MINUS Exp
   64    | Exp . STAR Exp
   65    | Exp . DIV Exp
   71    | Exp . LB Exp RB
   71    | Exp LB Exp . RB
   72    | Exp . DOT ID

    ASSIGNOP  shift, and go to state 84
    RELOP     shift, and go to state 85
    PLUS      shift, and go to state 86
    MINUS     shift, and go to state 87
    STAR      shift, and go to state 88
    DIV       shift, and go to state 89
    AND       shift, and go to state 90
    OR        shift, and go to state 91
    DOT       shift, and go to state 92
    LB        shift, and go to state 93
    RB        shift, and go to state 118


State 114

   43 Stmt: IF LP Exp RP . Stmt
   44     | IF LP Exp RP . Stmt ELSE Stmt

    error   shift, and go to state 119
    MINUS   shift, and go to state 56
    NOT     shift, and go to state 57
    LP      shift, and go to state 58
    LC      shift, and go to state 28
    RETURN  shift, and go to state 59
    IF      shift, and go to state 60
    WHILE   shift, and go to state 61
    ID      shift, and go to state 62
    FLOAT   shift, and go to state 63
    INT     shift, and go to state 64

    CompSt  go to state 65
    Stmt    go to state 120
    Exp     go to state 68


State 115

   45 Stmt: WHILE LP Exp RP . Stmt

    error   shift, and go to state 119
    MINUS   shift, and go to state 56
    NOT     shift, and go to state 57
    LP      shift, and go to state 58
    LC      shift, and go to state 28
    RETURN  shift, and go to state 59
    IF      shift, and go to state 60
    WHILE   shift, and go to state 61
    ID      shift, and go to state 62
    FLOAT   shift, and go to state 63
    INT     shift, and go to state 64

    CompSt  go to state 65
    Stmt    go to state 121
    Exp     go to state 68


State 116

   77 Args: Exp COMMA . Args

    error  shift, and go to state 100
    MINUS  shift, and go to state 56
    NOT    shift, and go to state 57
    LP     shift, and go to state 58
    ID     shift, and go to state 62
    FLOAT  shift, and go to state 63
    INT    shift, and go to state 64

    Exp   go to state 102
    Args  go to state 122


State 117

   69 Exp: ID LP Args RP .

    $default  reduce using rule 69 (Exp)


State 118

   71 Exp: Exp LB Exp RB .

    $default  reduce using rule 71 (Exp)


State 119

   36 CompSt: error .
   46 Stmt: error .
   76 Exp: error .

    error     reduce using rule 36 (CompSt)
    error     [reduce using rule 46 (Stmt)]
    SEMI      reduce using rule 76 (Exp)
    ASSIGNOP  reduce using rule 76 (Exp)
    RELOP     reduce using rule 76 (Exp)
    PLUS      reduce using rule 76 (Exp)
    MINUS     reduce using rule 36 (CompSt)
    MINUS     [reduce using rule 46 (Stmt)]
    MINUS     [reduce using rule 76 (Exp)]
    STAR      reduce using rule 76 (Exp)
    DIV       reduce using rule 76 (Exp)
    AND       reduce using rule 76 (Exp)
    OR        reduce using rule 76 (Exp)
    DOT       reduce using rule 76 (Exp)
    NOT       reduce using rule 36 (CompSt)
    NOT       [reduce using rule 46 (Stmt)]
    LP        reduce using rule 36 (CompSt)
    LP        [reduce using rule 46 (Stmt)]
    LB        reduce using rule 76 (Exp)
    LC        reduce using rule 36 (CompSt)
    LC        [reduce using rule 46 (Stmt)]
    RC        reduce using rule 36 (CompSt)
    RC        [reduce using rule 46 (Stmt)]
    RETURN    reduce using rule 36 (CompSt)
    RETURN    [reduce using rule 46 (Stmt)]
    IF        reduce using rule 36 (CompSt)
    IF        [reduce using rule 46 (Stmt)]
    ELSE      reduce using rule 36 (CompSt)
    ELSE      [reduce using rule 46 (Stmt)]
    WHILE     reduce using rule 36 (CompSt)
    WHILE     [reduce using rule 46 (Stmt)]
    ID        reduce using rule 36 (CompSt)
    ID        [reduce using rule 46 (Stmt)]
    FLOAT     reduce using rule 36 (CompSt)
    FLOAT     [reduce using rule 46 (Stmt)]
    INT       reduce using rule 36 (CompSt)
    INT       [reduce using rule 46 (Stmt)]
    $default  reduce using rule 36 (CompSt)


State 120

   43 Stmt: IF LP Exp RP Stmt .
   44     | IF LP Exp RP Stmt . ELSE Stmt

    ELSE  shift, and go to state 123

    $default  reduce using rule 43 (Stmt)


State 121

   45 Stmt: WHILE LP Exp RP Stmt .

    $default  reduce using rule 45 (Stmt)


State 122

   77 Args: Exp COMMA Args .

    $default  reduce using rule 77 (Args)


State 123

   44 Stmt: IF LP Exp RP Stmt ELSE . Stmt

    error   shift, and go to state 119
    MINUS   shift, and go to state 56
    NOT     shift, and go to state 57
    LP      shift, and go to state 58
    LC      shift, and go to state 28
    RETURN  shift, and go to state 59
    IF      shift, and go to state 60
    WHILE   shift, and go to state 61
    ID      shift, and go to state 62
    FLOAT   shift, and go to state 63
    INT     shift, and go to state 64

    CompSt  go to state 65
    Stmt    go to state 124
    Exp     go to state 68


State 124

   44 Stmt: IF LP Exp RP Stmt ELSE Stmt .

    $default  reduce using rule 44 (Stmt)
